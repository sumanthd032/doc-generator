api/app.py: from flask import Flask, render_template, request, send_file
from docx import Document
import os
from datetime import datetime
import zipfile
import logging
import re
from flask_limiter import Limiter
from flask_limiter.util import get_remote_address

app = Flask(__name__, static_folder="../static", template_folder="../templates")

# Define directories using /tmp/ for Vercel compatibility
LOGS_DIR = "/tmp/logs"
OUTPUT_DIR = "/tmp/output"
DOWNLOAD_DIR = "/tmp/downloads"
TEMPLATES_DIR = "templates_docx"

# Create directories if they don't exist
for directory in [LOGS_DIR, OUTPUT_DIR, DOWNLOAD_DIR]:
    os.makedirs(directory, exist_ok=True)

# Setup logging
logging.basicConfig(
    filename=os.path.join(LOGS_DIR, 'app.log'),
    level=logging.INFO,
    format='%(asctime)s %(levelname)s: %(message)s'
)

# Setup rate limiting
limiter = Limiter(
    app=app,
    key_func=get_remote_address,
    default_limits=["200 per day", "50 per hour"],
    storage_uri="memory://"
)

@app.route('/')
@limiter.limit("10 per minute")
def home():
    return render_template('home.html')

@app.route('/sperm')
@limiter.limit("10 per minute")
def sperm_index():
    form_data = {
        'full_name': '', 'address': '', 'pin_code': '', 'contact_number': '', 'aadhaar_number': '',
        'date_of_birth': '', 'email_address': '', 'donor_id': '', 'date_of_discussion': '',
        'date_of_consultancy': '', 'genetic_disorders': '', 'family_history': '', 'current_medications': '',
        'allergies': '', 'last_medical_exam': '', 'hiv_results': '', 'hbv_results': '', 'hcv_results': '',
        'vdrl_results': '', 'serious_illness': '', 'smoking': 'No', 'smoking_frequency': '',
        'cigarettes_per_day': '', 'alcohol': 'No', 'alcohol_frequency': '', 'alcohol_amount': '',
        'drug_use': 'No', 'diet': 'Not Specified', 'marital_status': 'Not Specified', 'num_children': '0',
        'donor_experience': 'No', 'donation_frequency': '', 'height': '', 'weight': '', 'education': '',
        'mother_tongue': '', 'skin_colour': '', 'hair_colour': '', 'eye_colour': '', 'religion': '',
        'occupation': '', 'consent_cryopreservation': 'No', 'consent_art_bank': 'No', 'consent_registry': 'No'
    }
    return render_template('sperm_index.html', form_data=form_data, errors=[], today=datetime.now().date().isoformat())

@app.route('/oocyte')
@limiter.limit("10 per minute")
def oocyte_index():
    form_data = {
        'full_name': '', 'address': '', 'district': '', 'state': '', 'pin_code': '', 'contact_number': '',
        'aadhaar_number': '', 'date_of_birth': '', 'age': '', 'date_of_discussion': '', 'date_of_consultancy': '',
        'marital_status': 'Not Specified', 'num_children': '0', 'donor_id': '', 'last_medical_exam': '',
        'hiv_results': '', 'hbv_results': '', 'hcv_results': '', 'vdrl_results': '', 'family_history': '',
        'serious_illness': '', 'current_medications': '', 'allergies': '', 'antral_follicle_count': '',
        'fsh_levels': '', 'amh_levels': '', 'tobacco_use': 'No', 'tobacco_frequency': '', 'alcohol': 'No',
        'alcohol_frequency': '', 'drug_use': 'No', 'exercise_routine': '', 'consent_registry': 'No',
        'place': '', 'ivf_name': '', 'ivf_address': '', 'doctor_name': ''
    }
    return render_template('oocyte_index.html', form_data=form_data, errors=[], today=datetime.now().date().isoformat())

@app.route('/commissioning_couple')
@limiter.limit("10 per minute")
def commissioning_couple_index():
    form_data = {
        'female_name': '', 'male_name': '', 'female_age': '', 'female_dob': '', 'female_aadhaar': '',
        'female_occupation': '', 'male_age': '', 'male_dob': '', 'address': '', 'district': '',
        'state': '', 'pin_code': '', 'place': '', 'ivf_name': '', 'ivf_address': '', 'doctor_name': ''
    }
    return render_template('commissioning_couple_index.html', form_data=form_data, errors=[], today=datetime.now().date().isoformat())

@app.route('/generate_sperm', methods=['POST'])
@limiter.limit("5 per minute")
def generate_sperm_document():
    logging.info(f"Processing sperm donor form submission from {request.remote_addr}")
    form_data = {
        'full_name': request.form.get('full_name', '').strip(),
        'address': request.form.get('address', '').strip(),
        'pin_code': request.form.get('pin_code', '').strip(),
        'contact_number': request.form.get('contact_number', '').strip(),
        'aadhaar_number': request.form.get('aadhaar_number', '').strip(),
        'date_of_birth': request.form.get('date_of_birth', '').strip(),
        'email_address': request.form.get('email_address', '').strip(),
        'donor_id': request.form.get('donor_id', '').strip(),
        'date_of_discussion': request.form.get('date_of_discussion', '').strip(),
        'date_of_consultancy': request.form.get('date_of_consultancy', '').strip(),
        'genetic_disorders': request.form.get('genetic_disorders', '').strip(),
        'family_history': request.form.get('family_history', '').strip(),
        'current_medications': request.form.get('current_medications', '').strip(),
        'allergies': request.form.get('allergies', '').strip(),
        'last_medical_exam': request.form.get('last_medical_exam', '').strip(),
        'hiv_results': request.form.get('hiv_results', '').strip(),
        'hbv_results': request.form.get('hbv_results', '').strip(),
        'hcv_results': request.form.get('hcv_results', '').strip(),
        'vdrl_results': request.form.get('vdrl_results', '').strip(),
        'serious_illness': request.form.get('serious_illness', '').strip(),
        'smoking': request.form.get('smoking', 'No'),
        'smoking_frequency': request.form.get('smoking_frequency', '').strip(),
        'cigarettes_per_day': request.form.get('cigarettes_per_day', '').strip(),
        'alcohol': request.form.get('alcohol', 'No'),
        'alcohol_frequency': request.form.get('alcohol_frequency', '').strip(),
        'alcohol_amount': request.form.get('alcohol_amount', '').strip(),
        'drug_use': request.form.get('drug_use', 'No'),
        'diet': request.form.get('diet', 'Not Specified'),
        'marital_status': request.form.get('marital_status', 'Not Specified'),
        'num_children': request.form.get('num_children', '0').strip(),
        'donor_experience': request.form.get('donor_experience', 'No'),
        'donation_frequency': request.form.get('donation_frequency', '').strip(),
        'height': request.form.get('height', '').strip(),
        'weight': request.form.get('weight', '').strip(),
        'education': request.form.get('education', '').strip(),
        'mother_tongue': request.form.get('mother_tongue', '').strip(),
        'skin_colour': request.form.get('skin_colour', '').strip(),
        'hair_colour': request.form.get('hair_colour', '').strip(),
        'eye_colour': request.form.get('eye_colour', '').strip(),
        'religion': request.form.get('religion', '').strip(),
        'occupation': request.form.get('occupation', '').strip(),
        'consent_cryopreservation': 'Yes' if request.form.get('consent_cryopreservation') else 'No',
        'consent_art_bank': 'Yes' if request.form.get('consent_art_bank') else 'No',
        'consent_registry': 'Yes' if request.form.get('consent_registry') else 'No',
        'date': datetime.now().strftime('%d/%m/%y')
    }

    # Server-side validation
    required_fields = ['full_name', 'aadhaar_number', 'date_of_discussion', 'date_of_consultancy']
    errors = []
    for field in required_fields:
        if not form_data[field]:
            errors.append(f"{field.replace('_', ' ').title()} is required.")

    # Validate Aadhaar number
    if form_data['aadhaar_number'] and not re.match(r'^\d{12}$', form_data['aadhaar_number']):
        errors.append("Aadhaar Number must be 12 digits.")

    # Validate email format
    if form_data['email_address'] and not re.match(r'^[\w\.-]+@[\w\.-]+\.\w+$', form_data['email_address']):
        errors.append("Invalid email address.")

    # Validate phone number
    if form_data['contact_number'] and not re.match(r'^\d{10}$|^$', form_data['contact_number']):
        errors.append("Contact Number must be 10 digits if provided.")

    # Validate PIN code
    if form_data['pin_code'] and not re.match(r'^\d{6}$|^$', form_data['pin_code']):
        errors.append("PIN Code must be 6 digits if provided.")

    # Validate dates
    today = datetime.now().date()
    for date_field in ['date_of_birth', 'last_medical_exam', 'date_of_discussion', 'date_of_consultancy']:
        if form_data[date_field]:
            try:
                input_date = datetime.strptime(form_data[date_field], '%Y-%m-%d').date()
                if input_date > today:
                    errors.append(f"{date_field.replace('_', ' ').title()} cannot be in the future.")
            except ValueError:
                errors.append(f"Invalid format for {date_field.replace('_', ' ').title()}.")

    # Validate number of children
    try:
        num_children = int(form_data['num_children']) if form_data['num_children'] else 0
        if num_children < 0:
            errors.append("Number of children cannot be negative.")
        elif num_children > 20:
            errors.append("Number of children cannot exceed 20.")
    except ValueError:
        errors.append("Number of children must be a valid number.")

    # Validate children ages
    children_ages = []
    for i in range(1, num_children + 1):
        age = request.form.get(f'child_{i}_age', '').strip()
        try:
            if age:
                age_val = int(age)
                if age_val < 0 or age_val > 100:
                    errors.append(f"Child {i} Age must be between 0 and 100.")
                children_ages.append(f"Child {i}: Age: {age}")
            else:
                children_ages.append(f"Child {i}: Age: N/A")
        except ValueError:
            errors.append(f"Child {i} Age must be a valid number.")

    # Validate conditional fields
    if form_data['smoking'] == 'Yes' and not (form_data['smoking_frequency'] and form_data['cigarettes_per_day']):
        errors.append("Smoking Frequency and Cigarettes per Day are required if smoking is Yes.")
    if form_data['alcohol'] == 'Yes' and not (form_data['alcohol_frequency'] and form_data['alcohol_amount']):
        errors.append("Alcohol Frequency and Amount are required if alcohol consumption is Yes.")

    # Validate blood test results
    for field in ['hiv_results', 'hbv_results', 'hcv_results', 'vdrl_results']:
        if form_data[field] and form_data[field].lower() not in ['negative', 'positive', 'pending', '']:
            errors.append(f"{field.replace('_', ' ').title()} must be 'Negative', 'Positive', or 'Pending'.")

    if errors:
        logging.warning(f"Validation errors: {errors}")
        return render_template('sperm_index.html', errors=errors, form_data=form_data, today=datetime.now().date().isoformat(), show_modal=True)

    form_data['children_ages'] = '\n'.join(children_ages) if children_ages else 'None'

    # List of templates and their required fields
    templates = [
        {
            'file': os.path.join(TEMPLATES_DIR, 'form_15.docx'),
            'output': 'form_15_{full_name}_{timestamp}.docx',
            'fields': ['full_name', 'address', 'pin_code', 'contact_number', 'aadhaar_number', 'date_of_discussion', 'date_of_consultancy', 'date']
        },
        {
            'file': os.path.join(TEMPLATES_DIR, 'medical_history.docx'),
            'output': 'medical_history_{full_name}_{timestamp}.docx',
            'fields': ['full_name', 'date_of_birth', 'address', 'contact_number', 'email_address', 'aadhaar_number', 'donor_id', 'date', 'last_medical_exam', 'hiv_results', 'hbv_results', 'hcv_results', 'vdrl_results', 'family_history', 'serious_illness', 'current_medications', 'allergies', 'consent_cryopreservation', 'consent_art_bank', 'consent_registry']
        },
        {
            'file': os.path.join(TEMPLATES_DIR, 'donor_info.docx'),
            'output': 'donor_info_{full_name}_{timestamp}.docx',
            'fields': ['full_name', 'date_of_birth', 'contact_number', 'email_address', 'aadhaar_number', 'genetic_disorders', 'family_history', 'current_medications', 'allergies', 'smoking', 'smoking_frequency', 'cigarettes_per_day', 'alcohol', 'alcohol_frequency', 'alcohol_amount', 'drug_use', 'diet', 'marital_status', 'num_children', 'donor_experience', 'donation_frequency', 'height', 'weight', 'education', 'mother_tongue', 'skin_colour', 'hair_colour', 'eye_colour', 'religion', 'occupation', 'date', 'children_ages']
        }
    ]

    # Generate documents and prepare ZIP
    generated_files = []
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    zip_filename = f"sperm_donor_documents_{form_data['full_name'].replace(' ', '_') or 'Unknown'}_{timestamp}.zip"
    zip_path = os.path.join(DOWNLOAD_DIR, zip_filename)

    try:
        with zipfile.ZipFile(zip_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for template in templates:
                try:
                    doc = Document(template['file'])
                    for paragraph in doc.paragraphs:
                        for key in template['fields']:
                            placeholder = f'{{{key}}}'
                            if placeholder in paragraph.text:
                                paragraph.text = paragraph.text.replace(placeholder, form_data[key] or 'N/A')
                    output_filename = template['output'].format(full_name=form_data['full_name'].replace(' ', '_') or 'Unknown', timestamp=timestamp)
                    output_path = os.path.join(OUTPUT_DIR, output_filename)
                    doc.save(output_path)
                    zipf.write(output_path, output_filename)
                    generated_files.append(output_path)
                    logging.info(f"Generated {output_filename}")
                except FileNotFoundError as e:
                    logging.error(f"Template file {template['file']} not found: {str(e)}")
                    return render_template('error.html', errors=[f"Template file {template['file']} not found."], show_modal=True)
                except Exception as e:
                    logging.error(f"Error processing {template['file']}: {str(e)}")
                    return render_template('error.html', errors=[f"Error processing document: {str(e)}"], show_modal=True)
    except Exception as e:
        logging.error(f"Error creating ZIP file: {str(e)}")
        return render_template('error.html', errors=[f"Error creating ZIP file: {str(e)}"], show_modal=True)

    logging.info(f"ZIP file created: {zip_filename}")
    return render_template('success.html', zip_filename=zip_filename, errors=[], donor_type='sperm')

@app.route('/generate_oocyte', methods=['POST'])
@limiter.limit("5 per minute")
def generate_oocyte_document():
    logging.info(f"Processing oocyte donor form submission from {request.remote_addr}")
    form_data = {
        'full_name': request.form.get('full_name', '').strip(),
        'address': request.form.get('address', '').strip(),
        'district': request.form.get('district', '').strip(),
        'state': request.form.get('state', '').strip(),
        'pin_code': request.form.get('pin_code', '').strip(),
        'contact_number': request.form.get('contact_number', '').strip(),
        'aadhaar_number': request.form.get('aadhaar_number', '').strip(),
        'date_of_birth': request.form.get('date_of_birth', '').strip(),
        'age': request.form.get('age', '').strip(),
        'date_of_discussion': request.form.get('date_of_discussion', '').strip(),
        'date_of_consultancy': request.form.get('date_of_consultancy', '').strip(),
        'marital_status': request.form.get('marital_status', 'Not Specified'),
        'num_children': request.form.get('num_children', '0').strip(),
        'donor_id': request.form.get('donor_id', '').strip(),
        'last_medical_exam': request.form.get('last_medical_exam', '').strip(),
        'hiv_results': request.form.get('hiv_results', '').strip(),
        'hbv_results': request.form.get('hbv_results', '').strip(),
        'hcv_results': request.form.get('hcv_results', '').strip(),
        'vdrl_results': request.form.get('vdrl_results', '').strip(),
        'family_history': request.form.get('family_history', '').strip(),
        'serious_illness': request.form.get('serious_illness', '').strip(),
        'current_medications': request.form.get('current_medications', '').strip(),
        'allergies': request.form.get('allergies', '').strip(),
        'antral_follicle_count': request.form.get('antral_follicle_count', '').strip(),
        'fsh_levels': request.form.get('fsh_levels', '').strip(),
        'amh_levels': request.form.get('amh_levels', '').strip(),
        'tobacco_use': request.form.get('tobacco_use', 'No'),
        'tobacco_frequency': request.form.get('tobacco_frequency', '').strip(),
        'alcohol': request.form.get('alcohol', 'No'),
        'alcohol_frequency': request.form.get('alcohol_frequency', '').strip(),
        'drug_use': request.form.get('drug_use', 'No'),
        'exercise_routine': request.form.get('exercise_routine', '').strip(),
        'consent_registry': 'Yes' if request.form.get('consent_registry') else 'No',
        'place': request.form.get('place', '').strip(),
        'ivf_name': request.form.get('ivf_name', '').strip(),
        'ivf_address': request.form.get('ivf_address', '').strip(),
        'doctor_name': request.form.get('doctor_name', '').strip(),
        'date': datetime.now().strftime('%d/%m/%y')
    }

    # Server-side validation
    required_fields = ['full_name', 'aadhaar_number', 'date_of_discussion', 'date_of_consultancy', 'ivf_name', 'ivf_address', 'doctor_name']
    errors = []
    for field in required_fields:
        if not form_data[field]:
            errors.append(f"{field.replace('_', ' ').title()} is required.")

    # Validate Aadhaar number
    if form_data['aadhaar_number'] and not re.match(r'^\d{12}$', form_data['aadhaar_number']):
        errors.append("Aadhaar Number must be 12 digits.")

    # Validate phone number
    if form_data['contact_number'] and not re.match(r'^\d{10}$|^$', form_data['contact_number']):
        errors.append("Contact Number must be 10 digits if provided.")

    # Validate PIN code
    if form_data['pin_code'] and not re.match(r'^\d{6}$|^$', form_data['pin_code']):
        errors.append("PIN Code must be 6 digits if provided.")

    # Validate age
    try:
        age = int(form_data['age']) if form_data['age'] else 0
        if age < 18 or age > 100:
            errors.append("Age must be between 18 and 100.")
    except ValueError:
        errors.append("Age must be a valid number.")

    # Validate dates
    today = datetime.now().date()
    for date_field in ['date_of_birth', 'date_of_discussion', 'date_of_consultancy', 'last_medical_exam']:
        if form_data[date_field]:
            try:
                input_date = datetime.strptime(form_data[date_field], '%Y-%m-%d').date()
                if input_date > today:
                    errors.append(f"{date_field.replace('_', ' ').title()} cannot be in the future.")
            except ValueError:
                errors.append(f"Invalid format for {date_field.replace('_', ' ').title()}.")

    # Validate number of children
    try:
        num_children = int(form_data['num_children']) if form_data['num_children'] else 0
        if num_children < 0:
            errors.append("Number of children cannot be negative.")
        elif num_children > 20:
            errors.append("Number of children cannot exceed 20.")
    except ValueError:
        errors.append("Number of children must be a valid number.")

    # Validate children ages
    children_ages = []
    for i in range(1, num_children + 1):
        age = request.form.get(f'child_{i}_age', '').strip()
        try:
            if age:
                age_val = int(age)
                if age_val < 2 or age_val > 100:
                    errors.append(f"Child {i} Age must be between 2 and 100.")
                children_ages.append(f"Child {i}: Age: {age}")
            else:
                children_ages.append(f"Child {i}: Age: N/A")
        except ValueError:
            errors.append(f"Child {i} Age must be a valid number.")

    # Validate conditional fields
    if form_data['tobacco_use'] == 'Yes' and not form_data['tobacco_frequency']:
        errors.append("Tobacco Frequency is required if tobacco use is Yes.")
    if form_data['alcohol'] == 'Yes' and not form_data['alcohol_frequency']:
        errors.append("Alcohol Frequency is required if alcohol consumption is Yes.")

    # Validate blood test results
    for field in ['hiv_results', 'hbv_results', 'hcv_results', 'vdrl_results']:
        if form_data[field] and form_data[field].lower() not in ['negative', 'positive', 'pending', '']:
            errors.append(f"{field.replace('_', ' ').title()} must be 'Negative', 'Positive', or 'Pending'.")

    if errors:
        logging.warning(f"Validation errors: {errors}")
        return render_template('oocyte_index.html', errors=errors, form_data=form_data, today=datetime.now().date().isoformat(), show_modal=True)

    form_data['children_ages'] = '\n'.join(children_ages) if children_ages else 'None'

    # List of templates and their required fields
    templates = [
        {
            'file': os.path.join(TEMPLATES_DIR, 'form_13.docx'),
            'output': 'form_13_{full_name}_{timestamp}.docx',
            'fields': ['full_name', 'address', 'district', 'state', 'pin_code', 'contact_number', 'aadhaar_number', 'date_of_discussion', 'date', 'ivf_name', 'ivf_address', 'doctor_name']
        },
        {
            'file': os.path.join(TEMPLATES_DIR, 'oocyte_medical_history.docx'),
            'output': 'oocyte_medical_history_{full_name}_{timestamp}.docx',
            'fields': ['full_name', 'date_of_birth', 'marital_status', 'address', 'district', 'state', 'pin_code', 'contact_number', 'email_address', 'aadhaar_number', 'donor_id', 'date', 'last_medical_exam', 'hiv_results', 'hbv_results', 'hcv_results', 'vdrl_results', 'family_history', 'serious_illness', 'current_medications', 'allergies', 'antral_follicle_count', 'fsh_levels', 'amh_levels', 'tobacco_use', 'tobacco_frequency', 'alcohol', 'alcohol_frequency', 'drug_use', 'exercise_routine', 'consent_registry']
        },
        {
            'file': os.path.join(TEMPLATES_DIR, 'oocyte_donor_affidavit.docx'),
            'output': 'oocyte_donor_affidavit_{full_name}_{timestamp}.docx',
            'fields': ['full_name', 'age', 'date_of_birth', 'address', 'district', 'state', 'pin_code', 'contact_number', 'aadhaar_number', 'num_children', 'place', 'date', 'ivf_name', 'ivf_address', 'doctor_name']
        }
    ]

    # Generate documents and prepare ZIP
    generated_files = []
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    zip_filename = f"oocyte_donor_documents_{form_data['full_name'].replace(' ', '_') or 'Unknown'}_{timestamp}.zip"
    zip_path = os.path.join(DOWNLOAD_DIR, zip_filename)

    try:
        with zipfile.ZipFile(zip_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for template in templates:
                try:
                    doc = Document(template['file'])
                    for paragraph in doc.paragraphs:
                        for key in template['fields']:
                            placeholder = f'{{{key}}}'
                            if placeholder in paragraph.text:
                                paragraph.text = paragraph.text.replace(placeholder, form_data[key] or 'N/A')
                    output_filename = template['output'].format(full_name=form_data['full_name'].replace(' ', '_') or 'Unknown', timestamp=timestamp)
                    output_path = os.path.join(OUTPUT_DIR, output_filename)
                    doc.save(output_path)
                    zipf.write(output_path, output_filename)
                    generated_files.append(output_path)
                    logging.info(f"Generated {output_filename}")
                except FileNotFoundError as e:
                    logging.error(f"Template file {template['file']} not found: {str(e)}")
                    return render_template('error.html', errors=[f"Template file {template['file']} not found."], show_modal=True)
                except Exception as e:
                    logging.error(f"Error processing {template['file']}: {str(e)}")
                    return render_template('error.html', errors=[f"Error processing document: {str(e)}"], show_modal=True)
    except Exception as e:
        logging.error(f"Error creating ZIP file: {str(e)}")
        return render_template('error.html', errors=[f"Error creating ZIP file: {str(e)}"], show_modal=True)

    logging.info(f"ZIP file created: {zip_filename}")
    return render_template('success.html', zip_filename=zip_filename, errors=[], donor_type='oocyte')

@app.route('/generate_commissioning_couple', methods=['POST'])
@limiter.limit("5 per minute")
def generate_commissioning_couple_document():
    logging.info(f"Processing commissioning couple form submission from {request.remote_addr}")
    form_data = {
        'female_name': request.form.get('female_name', '').strip(),
        'male_name': request.form.get('male_name', '').strip(),
        'female_age': request.form.get('female_age', '').strip(),
        'female_dob': request.form.get('female_dob', '').strip(),
        'female_aadhaar': request.form.get('female_aadhaar', '').strip(),
        'female_occupation': request.form.get('female_occupation', '').strip(),
        'male_age': request.form.get('male_age', '').strip(),
        'male_dob': request.form.get('male_dob', '').strip(),
        'address': request.form.get('address', '').strip(),
        'district': request.form.get('district', '').strip(),
        'state': request.form.get('state', '').strip(),
        'pin_code': request.form.get('pin_code', '').strip(),
        'place': request.form.get('place', '').strip(),
        'ivf_name': request.form.get('ivf_name', '').strip(),
        'ivf_address': request.form.get('ivf_address', '').strip(),
        'doctor_name': request.form.get('doctor_name', '').strip(),
        'date': datetime.now().strftime('%d/%m/%y')
    }

    # Server-side validation
    required_fields = ['female_name', 'male_name', 'female_aadhaar', 'female_dob', 'male_dob', 'ivf_name', 'ivf_address', 'doctor_name']
    errors = []
    for field in required_fields:
        if not form_data[field]:
            errors.append(f"{field.replace('_', ' ').title()} is required.")

    # Validate Aadhaar number
    if form_data['female_aadhaar'] and not re.match(r'^\d{12}$', form_data['female_aadhaar']):
        errors.append("Female Aadhaar Number must be 12 digits.")

    # Validate PIN code
    if form_data['pin_code'] and not re.match(r'^\d{6}$|^$', form_data['pin_code']):
        errors.append("PIN Code must be 6 digits if provided.")

    # Validate ages
    for field in ['female_age', 'male_age']:
        try:
            age = int(form_data[field]) if form_data[field] else 0
            if age < 18 or age > 100:
                errors.append(f"{field.replace('_', ' ').title()} must be between 18 and 100.")
        except ValueError:
            errors.append(f"{field.replace('_', ' ').title()} must be a valid number.")

    # Validate dates
    today = datetime.now().date()
    for date_field in ['female_dob', 'male_dob']:
        if form_data[date_field]:
            try:
                input_date = datetime.strptime(form_data[date_field], '%Y-%m-%d').date()
                if input_date > today:
                    errors.append(f"{date_field.replace('_', ' ').title()} cannot be in the future.")
            except ValueError:
                errors.append(f"Invalid format for {date_field.replace('_', ' ').title()}.")

    if errors:
        logging.warning(f"Validation errors: {errors}")
        return render_template('commissioning_couple_index.html', errors=errors, form_data=form_data, today=datetime.now().date().isoformat(), show_modal=True)

    # List of templates and their required fields
    templates = [
        {
            'file': os.path.join(TEMPLATES_DIR, 'commissioning_couple_affidavit.docx'),
            'output': 'commissioning_couple_affidavit_{female_name}_{timestamp}.docx',
            'fields': ['female_name', 'male_name', 'female_age', 'female_dob', 'female_aadhaar', 'female_occupation', 'male_age', 'male_dob', 'address', 'district', 'state', 'pin_code', 'place', 'date', 'ivf_name', 'ivf_address', 'doctor_name']
        }
    ]

    # Generate documents and prepare ZIP
    generated_files = []
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    zip_filename = f"commissioning_couple_documents_{form_data['female_name'].replace(' ', '_') or 'Unknown'}_{timestamp}.zip"
    zip_path = os.path.join(DOWNLOAD_DIR, zip_filename)

    try:
        with zipfile.ZipFile(zip_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for template in templates:
                try:
                    doc = Document(template['file'])
                    for paragraph in doc.paragraphs:
                        for key in template['fields']:
                            placeholder = f'{{{key}}}'
                            if placeholder in paragraph.text:
                                paragraph.text = paragraph.text.replace(placeholder, form_data[key] or 'N/A')
                    output_filename = template['output'].format(female_name=form_data['female_name'].replace(' ', '_') or 'Unknown', timestamp=timestamp)
                    output_path = os.path.join(OUTPUT_DIR, output_filename)
                    doc.save(output_path)
                    zipf.write(output_path, output_filename)
                    generated_files.append(output_path)
                    logging.info(f"Generated {output_filename}")
                except FileNotFoundError as e:
                    logging.error(f"Template file {template['file']} not found: {str(e)}")
                    return render_template('error.html', errors=[f"Template file {template['file']} not found."], show_modal=True)
                except Exception as e:
                    logging.error(f"Error processing {template['file']}: {str(e)}")
                    return render_template('error.html', errors=[f"Error processing document: {str(e)}"], show_modal=True)
    except Exception as e:
        logging.error(f"Error creating ZIP file: {str(e)}")
        return render_template('error.html', errors=[f"Error creating ZIP file: {str(e)}"], show_modal=True)

    logging.info(f"ZIP file created: {zip_filename}")
    return render_template('success.html', zip_filename=zip_filename, errors=[], donor_type='commissioning_couple')

@app.route('/download/<filename>')
@limiter.limit("5 per minute")
def download_zip(filename):
    zip_path = os.path.join(DOWNLOAD_DIR, filename)
    try:
        response = send_file(zip_path, as_attachment=True)
        logging.info(f"Downloaded {filename} by {request.remote_addr}")
        # Clean up output files
        for file in os.listdir(OUTPUT_DIR):
            try:
                os.remove(os.path.join(OUTPUT_DIR, file))
            except Exception as e:
                logging.warning(f"Failed to delete output file {file}: {str(e)}")
        # Clean up ZIP file
        try:
            os.remove(zip_path)
        except Exception as e:
            logging.warning(f"Failed to delete ZIP file {zip_path}: {str(e)}")
        return response
    except FileNotFoundError:
        logging.error(f"ZIP file {filename} not found")
        return render_template('error.html', errors=["ZIP file not found. It may have already been downloaded or deleted."], show_modal=True)
    except Exception as e:
        logging.error(f"Error downloading {filename}: {str(e)}")
        return render_template('error.html', errors=[f"Error downloading file: {str(e)}"], show_modal=True)

@app.errorhandler(429)
def ratelimit_handler(e):
    logging.warning(f"Rate limit exceeded for {request.remote_addr}: {str(e)}")
    return render_template('error.html', errors=["Too many requests. Please try again later."], show_modal=True), 429

if __name__ == '__main__':
    app.run(debug=True)

static/commissioning_couple_scripts.js: document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('coupleForm');
    if (!form) return;

    const today = new Date().toISOString().split('T')[0];

    // Initialize Bootstrap tooltips
    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
    tooltipTriggerList.forEach(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));

    // Set max date for date inputs
    document.querySelectorAll('input[type="date"]').forEach(input => {
        input.setAttribute('max', today);
    });

    // Update progress bar
    function updateProgressBar() {
        const totalFields = form.querySelectorAll('input, select, textarea').length;
        const filledFields = Array.from(form.querySelectorAll('input, select, textarea')).filter(field => field.value.trim() !== '').length;
        const progress = (filledFields / totalFields) * 100;
        const progressBar = document.getElementById('progressBar');
        progressBar.style.width = `${progress}%`;
        progressBar.setAttribute('aria-valuenow', progress);
    }

    // Initialize progress
    updateProgressBar();

    // Event listeners
    form.querySelectorAll('input, select, textarea').forEach(field => {
        field.addEventListener('input', updateProgressBar);
    });

    // Form validation
    form.addEventListener('submit', (event) => {
        const errors = [];
        const errorList = document.getElementById('errorList');
        const errorModal = new bootstrap.Modal(document.getElementById('errorModal'));

        // Required fields
        ['female_name', 'female_dob', 'female_aadhaar', 'male_name', 'male_dob', 'ivf_name', 'doctor_name'].forEach(field => {
            if (!form[field].value) errors.push(`${field.replace('_', ' ').replace(/\b\w/g, c => c.toUpperCase())} is required.`);
        });

        // Pattern validations
        if (form.female_aadhaar.value && !/^\d{12}$/.test(form.female_aadhaar.value)) {
            errors.push('Female Aadhaar Number must be 12 digits.');
        }
        if (form.pin_code.value && !/^\d{6}$/.test(form.pin_code.value)) {
            errors.push('PIN Code must be 6 digits.');
        }

        // Number range validations
        ['female_age', 'male_age'].forEach(field => {
            if (form[field].value && (parseInt(form[field].value) < 18 || parseInt(form[field].value) > 100)) {
                errors.push(`${field.replace('_', ' ').replace(/\b\w/g, c => c.toUpperCase())} must be between 18 and 100.`);
            }
        });

        // Date validations
        ['female_dob', 'male_dob'].forEach(field => {
            if (form[field].value && form[field].value > today) {
                errors.push(`${field.replace('_', ' ').replace(/\b\w/g, c => c.toUpperCase())} cannot be in the future.`);
            }
        });

        if (errors.length > 0) {
            event.preventDefault();
            errorList.innerHTML = errors.map(error => `<li>${error}</li>`).join('');
            errorModal.show();
        }
    });
});

static/oocyte_scripts.js:document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('oocyteDonorForm');
    if (!form) {
        console.error('Form with ID oocyteDonorForm not found.');
        return;
    }

    const numChildrenInput = document.getElementById('num_children');
    const childrenAgesDiv = document.getElementById('children_ages');
    const tobaccoRadios = document.getElementsByName('tobacco_use');
    const alcoholRadios = document.getElementsByName('alcohol');
    const drugRadios = document.getElementsByName('drug_use');
    const tobaccoDetails = document.getElementById('tobacco_details');
    const alcoholDetails = document.getElementById('alcohol_details');
    const today = new Date().toISOString().split('T')[0];

    // Initialize Bootstrap tooltips
    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
    tooltipTriggerList.forEach(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));

    // Set max date for date inputs
    document.querySelectorAll('input[type="date"]').forEach(input => {
        input.setAttribute('max', today);
    });

    // Update progress bar
    function updateProgressBar() {
        const totalFields = form.querySelectorAll('input:not([type="submit"]), select, textarea').length;
        const filledFields = Array.from(form.querySelectorAll('input:not([type="submit"]), select, textarea')).filter(field => {
            if (field.type === 'radio' || field.type === 'checkbox') {
                return field.checked;
            }
            return field.value.trim() !== '';
        }).length;
        const progress = (filledFields / totalFields) * 100;
        const progressBar = document.getElementById('progressBar');
        if (progressBar) {
            progressBar.style.width = `${progress}%`;
            progressBar.setAttribute('aria-valuenow', progress);
        }
    }

    // Update children fields
    function updateChildrenFields() {
        if (!numChildrenInput || !childrenAgesDiv) return;
        const existingAges = {};
        for (let i = 1; i <= 20; i++) {
            const input = document.querySelector(`input[name=child_${i}_age]`);
            if (input && input.value) {
                existingAges[`child_${i}_age`] = input.value;
            }
        }
        const num = parseInt(numChildrenInput.value) || 0;
        childrenAgesDiv.innerHTML = '';
        if (num > 20) {
            alert('Number of children cannot exceed 20.');
            numChildrenInput.value = 20;
            return;
        }
        for (let i = 1; i <= num; i++) {
            const div = document.createElement('div');
            div.className = 'mb-2';
            const existingValue = existingAges[`child_${i}_age`] || '';
            div.innerHTML = `
                <label for="child_${i}_age" class="form-label">Child ${i} Age</label>
                <input type="number" class="form-control" id="child_${i}_age" name="child_${i}_age" value="${existingValue}" min="0" max="100" title="Age must be between 0 and 100" data-bs-toggle="tooltip" data-bs-placement="right">
            `;
            childrenAgesDiv.appendChild(div);
            new bootstrap.Tooltip(div.querySelector('input'));
        }
        updateProgressBar();
    }

    // Toggle tobacco details
    function updateTobaccoDetails() {
        if (tobaccoDetails) {
            tobaccoDetails.classList.toggle('d-none', !document.getElementById('tobacco_use_yes')?.checked);
        }
        updateProgressBar();
    }

    // Toggle alcohol details
    function updateAlcoholDetails() {
        if (alcoholDetails) {
            alcoholDetails.classList.toggle('d-none', !document.getElementById('alcohol_yes')?.checked);
        }
        updateProgressBar();
    }

    // Initialize visibility and progress
    updateTobaccoDetails();
    updateAlcoholDetails();
    updateChildrenFields();
    updateProgressBar();

    // Event listeners
    if (numChildrenInput) {
        numChildrenInput.addEventListener('change', updateChildrenFields);
    }
    tobaccoRadios.forEach(radio => radio.addEventListener('change', updateTobaccoDetails));
    alcoholRadios.forEach(radio => radio.addEventListener('change', updateAlcoholDetails));
    drugRadios.forEach(radio => radio.addEventListener('change', updateProgressBar));
    form.querySelectorAll('input, select, textarea').forEach(field => {
        field.addEventListener('input', updateProgressBar);
    });

    // Form validation
    form.addEventListener('submit', (event) => {
        const errors = [];
        const errorList = document.getElementById('errorList');
        const errorModal = new bootstrap.Modal(document.getElementById('errorModal'));

        // Required fields
        ['full_name', 'aadhaar_number', 'date_of_discussion', 'date_of_consultancy', 'ivf_name', 'doctor_name'].forEach(field => {
            const element = form[field];
            if (!element || !element.value.trim()) {
                errors.push(`${field.replace('_', ' ').replace(/\b\w/g, c => c.toUpperCase())} is required.`);
            }
        });

        // Pattern validations
        if (form.aadhaar_number?.value && !/^\d{12}$/.test(form.aadhaar_number.value)) {
            errors.push('Aadhaar Number must be 12 digits.');
        }
        if (form.contact_number?.value && !/^\d{10}$/.test(form.contact_number.value)) {
            errors.push('Contact Number must be 10 digits.');
        }
        if (form.pin_code?.value && !/^\d{6}$/.test(form.pin_code.value)) {
            errors.push('PIN Code must be 6 digits.');
        }
        if (form.email_address?.value && !/^[\w\.-]+@[\w\.-]+\.\w+$/.test(form.email_address.value)) {
            errors.push('Invalid email address.');
        }
        if (form.height?.value && !/^\d+(\.\d+)? (cm|ft)$/.test(form.height.value)) {
            errors.push('Height must be in format "number cm" or "number ft".');
        }
        if (form.weight?.value && !/^\d+(\.\d+)? (kg|lbs)$/.test(form.weight.value)) {
            errors.push('Weight must be in format "number kg" or "number lbs".');
        }

        // Number range validations
        if (form.age?.value && (parseInt(form.age.value) < 18 || parseInt(form.age.value) > 100)) {
            errors.push('Age must be between 18 and 100.');
        }
        if (form.num_children?.value && (parseInt(form.num_children.value) < 0 || parseInt(form.num_children.value) > 20)) {
            errors.push('Number of children must be between 0 and 20.');
        }
        if (form.tobacco_use_yes?.checked && !form.tobacco_frequency?.value.trim()) {
            errors.push('Tobacco Frequency is required if tobacco use is Yes.');
        }
        if (form.alcohol_yes?.checked && !form.alcohol_frequency?.value.trim()) {
            errors.push('Alcohol Frequency is required if alcohol consumption is Yes.');
        }
        ['antral_follicle_count', 'fsh_levels', 'amh_levels'].forEach(field => {
            if (form[field]?.value && (isNaN(form[field].value) || parseFloat(form[field].value) < 0)) {
                errors.push(`${field.replace('_', ' ').replace(/\b\w/g, c => c.toUpperCase())} must be a non-negative number.`);
            }
        });

        // Date validations
        ['date_of_birth', 'last_medical_exam', 'date_of_discussion', 'date_of_consultancy'].forEach(field => {
            if (form[field]?.value && form[field].value > today) {
                errors.push(`${field.replace('_', ' ').replace(/\b\w/g, c => c.toUpperCase())} cannot be in the future.`);
            }
        });

        // Blood test result validations
        ['hiv_results', 'hbv_results', 'hcv_results', 'vdrl_results'].forEach(field => {
            if (form[field]?.value && !['Negative', 'Positive', 'Pending', ''].includes(form[field].value)) {
                errors.push(`${field.replace('_', ' ').replace(/\b\w/g, c => c.toUpperCase())} must be 'Negative', 'Positive', or 'Pending'.`);
            }
        });

        // Child age validations
        const numChildren = parseInt(form.num_children?.value) || 0;
        for (let i = 1; i <= numChildren; i++) {
            const ageInput = document.querySelector(`input[name=child_${i}_age]`);
            if (ageInput && ageInput.value) {
                const age = parseInt(ageInput.value);
                if (isNaN(age) || age < 0 || age > 100) {
                    errors.push(`Child ${i} Age must be between 0 and 100.`);
                }
            }
        }

        if (errors.length > 0) {
            event.preventDefault();
            errorList.innerHTML = errors.map(error => `<li>${error}</li>`).join('');
            errorModal.show();
        } else {
            console.log('Form validation passed, submitting...');
        }
    });
});

static/scripts.js: document.addEventListener('DOMContentLoaded', () => {
    const numChildrenInput = document.getElementById('num_children');
    const childrenAgesDiv = document.getElementById('children_ages');
    const smokingRadios = document.getElementsByName('smoking');
    const alcoholRadios = document.getElementsByName('alcohol');
    const smokingDetails = document.getElementById('smoking_details');
    const alcoholDetails = document.getElementById('alcohol_details');
    const form = document.getElementById('donorForm');
    const errorModal = new bootstrap.Modal(document.getElementById('errorModal'));
    const errorList = document.getElementById('errorList');
    const progressBar = document.getElementById('progressBar');

    function updateChildrenFields() {
        const existingAges = {};
        for (let i = 1; i <= 20; i++) {
            const input = document.querySelector(`input[name=child_${i}_age]`);
            if (input && input.value) {
                existingAges[`child_${i}_age`] = input.value;
            }
        }

        const num = parseInt(numChildrenInput.value) || 0;
        childrenAgesDiv.innerHTML = '';
        if (num > 20) {
            showErrors(['Number of children cannot exceed 20.']);
            numChildrenInput.value = 20;
            return;
        }
        for (let i = 1; i <= num; i++) {
            const div = document.createElement('div');
            div.className = 'mb-3';
            const existingValue = existingAges[`child_${i}_age`] || '';
            div.innerHTML = `
                <label for="child_${i}_age" class="form-label">Child ${i} Age</label>
                <input type="number" class="form-control" id="child_${i}_age" name="child_${i}_age" value="${existingValue}" min="0" max="100" title="Age must be between 0 and 100" data-bs-toggle="tooltip" data-bs-placement="right">
            `;
            childrenAgesDiv.appendChild(div);
        }
        initializeTooltips();
    }

    function updateSmokingDetails() {
        smokingDetails.classList.toggle('d-none', !document.getElementById('smoking_yes').checked);
    }

    function updateAlcoholDetails() {
        alcoholDetails.classList.toggle('d-none', !document.getElementById('alcohol_yes').checked);
    }

    function updateProgress() {
        const inputs = form.querySelectorAll('input, textarea, select');
        let filled = 0;
        inputs.forEach(input => {
            if (input.type === 'radio' || input.type === 'checkbox') {
                if (input.checked) filled++;
            } else if (input.value) {
                filled++;
            }
        });
        const total = inputs.length;
        const percentage = Math.round((filled / total) * 100);
        progressBar.style.width = `${percentage}%`;
        progressBar.setAttribute('aria-valuenow', percentage);
    }

    function showErrors(errors) {
        errorList.innerHTML = errors.map(e => `<li>${e}</li>`).join('');
        errorModal.show();
    }

    function initializeTooltips() {
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.forEach(tooltipTriggerEl => {
            new bootstrap.Tooltip(tooltipTriggerEl);
        });
    }

    function validateForm(event) {
        event.preventDefault();
        const errors = [];
        if (!form.full_name.value) errors.push('Full Name is required.');
        if (!form.aadhaar_number.value) errors.push('Aadhaar Number is required.');
        if (!form.date_of_discussion.value) errors.push('Date of Discussion is required.');
        if (!form.date_of_consultancy.value) errors.push('Date of Consultancy is required.');
        if (form.aadhaar_number.value && !/^\d{12}$/.test(form.aadhaar_number.value)) errors.push('Aadhaar Number must be 12 digits.');
        if (form.contact_number.value && !/^\d{10}$/.test(form.contact_number.value)) errors.push('Contact Number must be 10 digits.');
        if (form.pin_code.value && !/^\d{6}$/.test(form.pin_code.value)) errors.push('PIN Code must be 6 digits.');
        if (form.email_address.value && !/^[\w\.-]+@[\w\.-]+\.\w+$/.test(form.email_address.value)) errors.push('Invalid email address.');
        if (form.num_children.value && (parseInt(form.num_children.value) < 0 || parseInt(form.num_children.value) > 20)) errors.push('Number of children must be between 0 and 20.');
        if (form.smoking_yes.checked && (!form.smoking_frequency.value || !form.cigarettes_per_day.value)) errors.push('Smoking Frequency and Cigarettes per Day are required if smoking is Yes.');
        if (form.alcohol_yes.checked && (!form.alcohol_frequency.value || !form.alcohol_amount.value)) errors.push('Alcohol Frequency and Amount are required if alcohol consumption is Yes.');
        const today = new Date().toISOString().split('T')[0];
        ['date_of_birth', 'last_medical_exam', 'date_of_discussion', 'date_of_consultancy'].forEach(field => {
            if (form[field].value && form[field].value > today) {
                errors.push(`${field.replace('_', ' ').replace(/\b\w/g, c => c.toUpperCase())} cannot be in the future.`);
            }
        });
        ['hiv_results', 'hbv_results', 'hcv_results', 'vdrl_results'].forEach(field => {
            if (form[field].value && !['Negative', 'Positive', 'Pending', ''].includes(form[field].value)) {
                errors.push(`${field.replace('_', ' ').replace(/\b\w/g, c => c.toUpperCase())} must be 'Negative', 'Positive', or 'Pending'.`);
            }
        });

        if (errors.length > 0) {
            showErrors(errors);
        } else {
            form.submit();
        }
    }

    numChildrenInput.addEventListener('input', () => {
        updateChildrenFields();
        updateProgress();
    });
    smokingRadios.forEach(radio => radio.addEventListener('change', () => {
        updateSmokingDetails();
        updateProgress();
    }));
    alcoholRadios.forEach(radio => radio.addEventListener('change', () => {
        updateAlcoholDetails();
        updateProgress();
    }));
    form.addEventListener('input', updateProgress);
    form.addEventListener('submit', validateForm);

    // Initialize
    updateChildrenFields();
    updateSmokingDetails();
    updateAlcoholDetails();
    updateProgress();
    initializeTooltips();

    // Show modal if errors exist from server-side
    if (window.location.hash === '#errorModal') {
        errorModal.show();
    }
});

static/sperm_scripts.js: document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('donorForm');
    if (!form) return;

    const numChildrenInput = document.getElementById('num_children');
    const childrenAgesDiv = document.getElementById('children_ages');
    const smokingRadios = document.getElementsByName('smoking');
    const alcoholRadios = document.getElementsByName('alcohol');
    const drugRadios = document.getElementsByName('drug_use');
    const smokingDetails = document.getElementById('smoking_details');
    const alcoholDetails = document.getElementById('alcohol_details');
    const today = new Date().toISOString().split('T')[0];

    // Initialize Bootstrap tooltips
    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
    tooltipTriggerList.forEach(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));

    // Set max date for date inputs
    document.querySelectorAll('input[type="date"]').forEach(input => {
        input.setAttribute('max', today);
    });

    // Update progress bar
    function updateProgressBar() {
        const totalFields = form.querySelectorAll('input, select, textarea').length;
        const filledFields = Array.from(form.querySelectorAll('input, select, textarea')).filter(field => field.value.trim() !== '').length;
        const progress = (filledFields / totalFields) * 100;
        const progressBar = document.getElementById('progressBar');
        progressBar.style.width = `${progress}%`;
        progressBar.setAttribute('aria-valuenow', progress);
    }

    // Update children fields
    function updateChildrenFields() {
        if (!numChildrenInput || !childrenAgesDiv) return;
        const existingAges = {};
        for (let i = 1; i <= 20; i++) {
            const input = document.querySelector(`input[name=child_${i}_age]`);
            if (input && input.value) {
                existingAges[`child_${i}_age`] = input.value;
            }
        }
        const num = parseInt(numChildrenInput.value) || 0;
        childrenAgesDiv.innerHTML = '';
        if (num > 20) {
            alert('Number of children cannot exceed 20.');
            numChildrenInput.value = 20;
            return;
        }
        for (let i = 1; i <= num; i++) {
            const div = document.createElement('div');
            div.className = 'mb-2';
            const existingValue = existingAges[`child_${i}_age`] || '';
            div.innerHTML = `
                <label for="child_${i}_age" class="form-label">Child ${i} Age</label>
                <input type="number" class="form-control" id="child_${i}_age" name="child_${i}_age" value="${existingValue}" min="0" max="100" title="Age must be between 0 and 100" data-bs-toggle="tooltip" data-bs-placement="right">
            `;
            childrenAgesDiv.appendChild(div);
            new bootstrap.Tooltip(div.querySelector('input'));
        }
        updateProgressBar();
    }

    // Toggle smoking details
    function updateSmokingDetails() {
        if (smokingDetails) {
            smokingDetails.classList.toggle('d-none', !document.getElementById('smoking_yes')?.checked);
        }
        updateProgressBar();
    }

    // Toggle alcohol details
    function updateAlcoholDetails() {
        if (alcoholDetails) {
            alcoholDetails.classList.toggle('d-none', !document.getElementById('alcohol_yes')?.checked);
        }
        updateProgressBar();
    }

    // Initialize visibility and progress
    updateSmokingDetails();
    updateAlcoholDetails();
    updateChildrenFields();

    // Event listeners
    if (numChildrenInput) {
        numChildrenInput.addEventListener('change', updateChildrenFields);
    }
    smokingRadios.forEach(radio => radio.addEventListener('change', updateSmokingDetails));
    alcoholRadios.forEach(radio => radio.addEventListener('change', updateAlcoholDetails));
    drugRadios.forEach(radio => radio.addEventListener('change', updateProgressBar));
    form.querySelectorAll('input, select, textarea').forEach(field => {
        field.addEventListener('input', updateProgressBar);
    });

    // Form validation
    form.addEventListener('submit', (event) => {
        const errors = [];
        const errorList = document.getElementById('errorList');
        const errorModal = new bootstrap.Modal(document.getElementById('errorModal'));

        // Required fields
        if (!form.full_name.value) errors.push('Full Name is required.');
        if (!form.aadhaar_number.value) errors.push('Aadhaar Number is required.');
        if (!form.date_of_discussion.value) errors.push('Date of Discussion is required.');
        if (!form.date_of_consultancy.value) errors.push('Date of Consultancy is required.');

        // Pattern validations
        if (form.aadhaar_number.value && !/^\d{12}$/.test(form.aadhaar_number.value)) {
            errors.push('Aadhaar Number must be 12 digits.');
        }
        if (form.contact_number.value && !/^\d{10}$/.test(form.contact_number.value)) {
            errors.push('Contact Number must be 10 digits.');
        }
        if (form.pin_code.value && !/^\d{6}$/.test(form.pin_code.value)) {
            errors.push('PIN Code must be 6 digits.');
        }
        if (form.email_address.value && !/^[\w\.-]+@[\w\.-]+\.\w+$/.test(form.email_address.value)) {
            errors.push('Invalid email address.');
        }
        if (form.height.value && !/^\d+(\.\d+)? (cm|ft)$/.test(form.height.value)) {
            errors.push('Height must be in format "number cm" or "number ft".');
        }
        if (form.weight.value && !/^\d+(\.\d+)? (kg|lbs)$/.test(form.weight.value)) {
            errors.push('Weight must be in format "number kg" or "number lbs".');
        }

        // Number range validations
        if (form.num_children.value && (parseInt(form.num_children.value) < 0 || parseInt(form.num_children.value) > 20)) {
            errors.push('Number of children must be between 0 and 20.');
        }
        if (form.smoking_yes?.checked && (!form.smoking_frequency.value || !form.cigarettes_per_day.value)) {
            errors.push('Smoking Frequency and Cigarettes per Day are required if smoking is Yes.');
        }
        if (form.alcohol_yes?.checked && (!form.alcohol_frequency.value || !form.alcohol_amount.value)) {
            errors.push('Alcohol Frequency and Amount are required if alcohol consumption is Yes.');
        }

        // Date validations
        ['date_of_birth', 'last_medical_exam', 'date_of_discussion', 'date_of_consultancy'].forEach(field => {
            if (form[field].value && form[field].value > today) {
                errors.push(`${field.replace('_', ' ').replace(/\b\w/g, c => c.toUpperCase())} cannot be in the future.`);
            }
        });

        // Blood test result validations
        ['hiv_results', 'hbv_results', 'hcv_results', 'vdrl_results'].forEach(field => {
            if (form[field].value && !['Negative', 'Positive', 'Pending', ''].includes(form[field].value)) {
                errors.push(`${field.replace('_', ' ').replace(/\b\w/g, c => c.toUpperCase())} must be 'Negative', 'Positive', or 'Pending'.`);
            }
        });

        // Child age validations
        const numChildren = parseInt(form.num_children.value) || 0;
        for (let i = 1; i <= numChildren; i++) {
            const ageInput = document.querySelector(`input[name=child_${i}_age]`);
            if (ageInput && ageInput.value) {
                const age = parseInt(ageInput.value);
                if (isNaN(age) || age < 0 || age > 100) {
                    errors.push(`Child ${i} Age must be between 0 and 100.`);
                }
            }
        }

        if (errors.length > 0) {
            event.preventDefault();
            errorList.innerHTML = errors.map(error => `<li>${error}</li>`).join('');
            errorModal.show();
        }
    });
});

static/styles.css: @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');

body {
    background-color: #f5f8fb;
    font-family: 'Roboto', Arial, sans-serif;
    color: #2d3748;
}

.container {
    max-width: 900px;
    background-color: #ffffff;
    padding: 40px;
    border-radius: 12px;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
    margin: 50px auto;
}

.home-container {
    max-width: 600px;
    text-align: center;
    background-color: #ffffff;
    padding: 40px;
    border-radius: 12px;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
    margin: 50px auto;
}

h1 {
    color: #2b6cb0;
    font-size: 2.8rem;
    font-weight: 700;
    margin-bottom: 2rem;
    text-align: center;
}

h3, .accordion-button {
    color: #2b6cb0;
    font-weight: 500;
    font-size: 1.4rem;
}

.form-label {
    font-weight: 500;
    color: #2d3748;
    margin-bottom: 0.5rem;
}

.form-control, .form-select {
    border-radius: 8px;
    border: 1px solid #e2e8f0;
    padding: 12px;
    font-size: 1rem;
    transition: border-color 0.2s, box-shadow 0.2s;
}

.form-control:focus, .form-select:focus {
    border-color: #2b6cb0;
    box-shadow: 0 0 0 0.2rem rgba(43, 108, 176, 0.25);
    outline: none;
}

.btn-primary {
    background-color: #2b6cb0;
    border-color: #2b6cb0;
    padding: 12px 24px;
    font-size: 1.1rem;
    border-radius: 8px;
    transition: background-color 0.2s, border-color 0.2s;
}

.btn-primary:hover {
    background-color: #2c5282;
    border-color: #2c5282;
}

.btn-secondary {
    background-color: #718096;
    border-color: #718096;
    padding: 12px 24px;
    font-size: 1.1rem;
    border-radius: 8px;
}

.btn-home {
    background-color: #38a169;
    border-color: #38a169;
    padding: 15px 30px;
    font-size: 1.2rem;
    margin: 10px;
    border-radius: 8px;
}

.btn-home:hover {
    background-color: #2f855a;
    border-color: #2f855a;
}

.alert {
    border-radius: 8px;
    font-size: 1rem;
}

.form-check-label {
    margin-left: 10px;
    font-size: 1rem;
    color: #2d3748;
}

input[type="radio"], input[type="checkbox"] {
    margin-right: 8px;
    accent-color: #2b6cb0;
}

input:invalid, select:invalid {
    border-color: #e53e3e;
    box-shadow: 0 0 5px rgba(229, 62, 62, 0.5);
}

.accordion-button {
    background-color: #edf2f7;
    font-size: 1.2rem;
    border-radius: 8px;
    transition: background-color 0.2s;
}

.accordion-button:not(.collapsed) {
    background-color: #2b6cb0;
    color: #ffffff;
}

.accordion-body {
    background-color: #f7fafc;
    padding: 20px;
    border-radius: 8px;
}

.progress {
    height: 12px;
    margin-bottom: 20px;
    border-radius: 6px;
    background-color: #e2e8f0;
}

.progress-bar {
    background-color: #2b6cb0;
    transition: width 0.3s ease-in-out;
}

.tooltip-inner {
    background-color: #2b6cb0;
    font-size: 0.9rem;
    border-radius: 6px;
}

.tooltip .arrow::before {
    border-top-color: #2b6cb0;
}

.modal-content {
    border-radius: 12px;
    border: none;
}

.modal-header {
    background-color: #e53e3e;
    color: #ffffff;
    border-top-left-radius: 12px;
    border-top-right-radius: 12px;
}

.modal-title {
    font-weight: 500;
}

.text-danger {
    font-size: 1.1rem;
    vertical-align: middle;
}

.d-flex.gap-3 {
    gap: 1.5rem !important;
}

@media (max-width: 576px) {
    .container, .home-container {
        padding: 20px;
        margin: 20px auto;
    }
    h1 {
        font-size: 2rem;
    }
    .btn-primary, .btn-home, .btn-secondary {
        width: 100%;
        margin: 10px 0;
    }
    .accordion-button {
        font-size: 1rem;
    }
    .form-control, .form-select {
        font-size: 0.9rem;
    }
}

templates/commissioning_couple_index.html: <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Commissioning Couple Form</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/static/styles.css" rel="stylesheet">
</head>
<body>
    <div class="container">
        <h1 class="text-center mb-4">Commissioning Couple Information Form</h1>
        <div class="progress mb-4">
            <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
        <div class="text-center mb-4">
            <a href="/" class="btn btn-secondary">Back to Home</a>
        </div>
        <form id="coupleForm" action="/generate_commissioning_couple" method="POST">
            <div class="accordion" id="coupleAccordion">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="femaleDetails">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFemale" aria-expanded="true" aria-controls="collapseFemale">
                            Female Details
                        </button>
                    </h2>
                    <div id="collapseFemale" class="accordion-collapse collapse show" aria-labelledby="femaleDetails">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label for="female_name" class="form-label">Female Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="female_name" name="female_name" value="{{ form_data.female_name | default('') }}" required data-bs-toggle="tooltip" data-bs-placement="right" title="Enter female's full name">
                            </div>
                            <div class="mb-3">
                                <label for="female_age" class="form-label">Female Age</label>
                                <input type="number" class="form-control" id="female_age" name="female_age" value="{{ form_data.female_age | default('') }}" min="18" max="100" title="Age must be between 18 and 100" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="female_dob" class="form-label">Female Date of Birth <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="female_dob" name="female_dob" value="{{ form_data.female_dob | default('') }}" max="{{ today }}" required data-bs-toggle="tooltip" data-bs-placement="right" title="Select female's date of birth">
                            </div>
                            <div class="mb-3">
                                <label for="female_aadhaar" class="form-label">Female Aadhaar Number <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="female_aadhaar" name="female_aadhaar" value="{{ form_data.female_aadhaar | default('') }}" pattern="\d{12}" required title="Aadhaar Number must be 12 digits" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="female_occupation" class="form-label">Female Occupation</label>
                                <input type="text" class="form-control" id="female_occupation" name="female_occupation" value="{{ form_data.female_occupation | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter female's occupation">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="maleDetails">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseMale" aria-expanded="false" aria-controls="collapseMale">
                            Male Details
                        </button>
                    </h2>
                    <div id="collapseMale" class="accordion-collapse collapse" aria-labelledby="maleDetails">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label for="male_name" class="form-label">Male Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="male_name" name="male_name" value="{{ form_data.male_name | default('') }}" required data-bs-toggle="tooltip" data-bs-placement="right" title="Enter male's full name">
                            </div>
                            <div class="mb-3">
                                <label for="male_age" class="form-label">Male Age</label>
                                <input type="number" class="form-control" id="male_age" name="male_age" value="{{ form_data.male_age | default('') }}" min="18" max="100" title="Age must be between 18 and 100" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="male_dob" class="form-label">Male Date of Birth <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="male_dob" name="male_dob" value="{{ form_data.male_dob | default('') }}" max="{{ today }}" required data-bs-toggle="tooltip" data-bs-placement="right" title="Select male's date of birth">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="addressDetails">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseAddress" aria-expanded="false" aria-controls="collapseAddress">
                            Address Details
                        </button>
                    </h2>
                    <div id="collapseAddress" class="accordion-collapse collapse" aria-labelledby="addressDetails">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label for="address" class="form-label">Address</label>
                                <textarea class="form-control" id="address" name="address" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your residential address">{{ form_data.address | default('') }}</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="district" class="form-label">District</label>
                                <input type="text" class="form-control" id="district" name="district" value="{{ form_data.district | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your district">
                            </div>
                            <div class="mb-3">
                                <label for="state" class="form-label">State</label>
                                <input type="text" class="form-control" id="state" name="state" value="{{ form_data.state | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your state">
                            </div>
                            <div class="mb-3">
                                <label for="pin_code" class="form-label">PIN Code</label>
                                <input type="text" class="form-control" id="pin_code" name="pin_code" value="{{ form_data.pin_code | default('') }}" pattern="\d{6}" title="PIN Code must be 6 digits" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="clinicDetails">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseClinic" aria-expanded="false" aria-controls="collapseClinic">
                            Clinic Details
                        </button>
                    </h2>
                    <div id="collapseClinic" class="accordion-collapse collapse" aria-labelledby="clinicDetails">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label for="ivf_name" class="form-label">IVF Clinic Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="ivf_name" name="ivf_name" value="{{ form_data.ivf_name | default('') }}" required data-bs-toggle="tooltip" data-bs-placement="right" title="Enter the IVF clinic name">
                            </div>
                            <div class="mb-3">
                                <label for="ivf_address" class="form-label">IVF Clinic Address</label>
                                <textarea class="form-control" id="ivf_address" name="ivf_address" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter the IVF clinic address">{{ form_data.ivf_address | default('') }}</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="doctor_name" class="form-label">Doctor Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="doctor_name" name="doctor_name" value="{{ form_data.doctor_name | default('') }}" required data-bs-toggle="tooltip" data-bs-placement="right" title="Enter the doctor's name">
                            </div>
                            <div class="mb-3">
                                <label for="place" class="form-label">Place</label>
                                <input type="text" class="form-control" id="place" name="place" value="{{ form_data.place | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter the place of consultation">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="text-center mt-4">
                <button type="submit" class="btn btn-primary btn-lg">Generate Documents</button>
            </div>
        </form>
        <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="errorModalLabel">Form Errors</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Please correct the following errors:</p>
                        <ul id="errorList">
                            {% for error in errors %}
                                <li>{{ error }}</li>
                            {% endfor %}
                        </ul>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/static/commissioning_couple_scripts.js"></script>
</body>
</html>

templates/error.html : <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Error</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="{{ url_for('static', filename='styles.css') }}" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center mb-4">An Error Occurred</h1>
        <div class="alert alert-danger">
            <p>{{ error }}</p>
        </div>
        <div class="text-center">
            <a href="{{ url_for('home') }}" class="btn btn-secondary">Back to Form</a>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

templates/home.html: <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ART Document Generator</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/static/styles.css" rel="stylesheet">
</head>
<body>
    <div class="home-container">
        <h1 class="text-center mb-4">ART Document Generator</h1>
        <div class="d-flex flex-column align-items-center">
            <a href="/sperm" class="btn btn-home w-100 mb-3">Sperm Donor Form</a>
            <a href="/oocyte" class="btn btn-home w-100 mb-3">Oocyte Donor Form</a>
            <a href="/commissioning_couple" class="btn btn-home w-100 mb-3">Commissioning Couple Form</a>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

templates/oocyte_index.html: <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Oocyte Donor Form</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/static/styles.css" rel="stylesheet">
</head>
<body>
    <div class="container">
        <h1 class="text-center mb-4">Oocyte Donor Information Form</h1>
        <div class="progress mb-4">
            <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
        <div class="text-center mb-4">
            <a href="/" class="btn btn-secondary">Back to Home</a>
        </div>
        <form id="oocyteDonorForm" action="/generate_oocyte" method="POST">
            <div class="accordion" id="oocyteAccordion">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="personalDetails">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapsePersonal" aria-expanded="true" aria-controls="collapsePersonal">
                            Personal Details
                        </button>
                    </h2>
                    <div id="collapsePersonal" class="accordion-collapse collapse show" aria-labelledby="personalDetails">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label for="full_name" class="form-label">Full Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="full_name" name="full_name" value="{{ form_data.full_name | default('') }}" required data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your full name">
                            </div>
                            <div class="mb-3">
                                <label for="address" class="form-label">Address</label>
                                <textarea class="form-control" id="address" name="address" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your residential address">{{ form_data.address | default('') }}</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="pin_code" class="form-label">PIN Code</label>
                                <input type="text" class="form-control" id="pin_code" name="pin_code" value="{{ form_data.pin_code | default('') }}" pattern="\d{6}" title="PIN Code must be 6 digits" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="contact_number" class="form-label">Contact Number</label>
                                <input type="tel" class="form-control" id="contact_number" name="contact_number" value="{{ form_data.contact_number | default('') }}" pattern="\d{10}" title="Contact Number must be 10 digits" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="aadhaar_number" class="form-label">Aadhaar Number <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="aadhaar_number" name="aadhaar_number" value="{{ form_data.aadhaar_number | default('') }}" pattern="\d{12}" required title="Aadhaar Number must be 12 digits" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="date_of_birth" class="form-label">Date of Birth</label>
                                <input type="date" class="form-control" id="date_of_birth" name="date_of_birth" value="{{ form_data.date_of_birth | default('') }}" max="{{ today }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Select your date of birth">
                            </div>
                            <div class="mb-3">
                                <label for="age" class="form-label">Age</label>
                                <input type="number" class="form-control" id="age" name="age" value="{{ form_data.age | default('') }}" min="18" max="100" title="Age must be between 18 and 100" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="email_address" class="form-label">Email Address</label>
                                <input type="email" class="form-control" id="email_address" name="email_address" value="{{ form_data.email_address | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter a valid email address">
                            </div>
                            <div class="mb-3">
                                <label for="marital_status" class="form-label">Marital Status</label>
                                <div class="d-flex flex-wrap gap-3">
                                    <div class="form-check">
                                        <input type="radio" id="marital_single" name="marital_status" value="Single" {% if form_data.marital_status == 'Single' %}checked{% endif %} class="form-check-input">
                                        <label for="marital_single" class="form-check-label">Single</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="marital_married" name="marital_status" value="Married" {% if form_data.marital_status == 'Married' %}checked{% endif %} class="form-check-input">
                                        <label for="marital_married" class="form-check-label">Married</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="marital_divorced" name="marital_status" value="Divorced" {% if form_data.marital_status == 'Divorced' %}checked{% endif %} class="form-check-input">
                                        <label for="marital_divorced" class="form-check-label">Divorced</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="marital_widowed" name="marital_status" value="Widowed" {% if form_data.marital_status == 'Widowed' or not form_data.marital_status %}checked{% endif %} class="form-check-input">
                                        <label for="marital_widowed" class="form-check-label">Widowed</label>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="num_children" class="form-label">Number of Biological Children</label>
                                <input type="number" class="form-control" id="num_children" name="num_children" value="{{ form_data.num_children | default('0') }}" min="0" max="20" title="Number of children must be between 0 and 20" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div id="children_ages" class="ms-3"></div>
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="consultationDetails">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseConsultation" aria-expanded="false" aria-controls="collapseConsultation">
                            Consultation Details
                        </button>
                    </h2>
                    <div id="collapseConsultation" class="accordion-collapse collapse" aria-labelledby="consultationDetails">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label for="ivf_name" class="form-label">IVF Clinic Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="ivf_name" name="ivf_name" value="{{ form_data.ivf_name | default('') }}" required data-bs-toggle="tooltip" data-bs-placement="right" title="Enter the IVF clinic name">
                            </div>
                            <div class="mb-3">
                                <label for="ivf_address" class="form-label">IVF Clinic Address</label>
                                <textarea class="form-control" id="ivf_address" name="ivf_address" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter the IVF clinic address">{{ form_data.ivf_address | default('') }}</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="doctor_name" class="form-label">Doctor Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="doctor_name" name="doctor_name" value="{{ form_data.doctor_name | default('') }}" required data-bs-toggle="tooltip" data-bs-placement="right" title="Enter the consulting doctor's name">
                            </div>
                            <div class="mb-3">
                                <label for="date_of_discussion" class="form-label">Date of Discussion <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="date_of_discussion" name="date_of_discussion" value="{{ form_data.date_of_discussion | default('') }}" required max="{{ today }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Select date of discussion with doctor">
                            </div>
                            <div class="mb-3">
                                <label for="date_of_consultancy" class="form-label">Date of Consultancy <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="date_of_consultancy" name="date_of_consultancy" value="{{ form_data.date_of_consultancy | default('') }}" required max="{{ today }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Select date of consultancy">
                            </div>
                            <div class="mb-3">
                                <label for="donor_experience" class="form-label">Previous Donor Experience</label>
                                <div class="d-flex gap-3">
                                    <div class="form-check">
                                        <input type="radio" id="donor_experience_yes" name="donor_experience" value="Yes" {% if form_data.donor_experience == 'Yes' %}checked{% endif %} class="form-check-input">
                                        <label for="donor_experience_yes" class="form-check-label">Yes</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="donor_experience_no" name="donor_experience" value="No" {% if form_data.donor_experience == 'No' or not form_data.donor_experience %}checked{% endif %} class="form-check-input">
                                        <label for="donor_experience_no" class="form-check-label">No</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="medicalHistory">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseMedical" aria-expanded="false" aria-controls="collapseMedical">
                            Medical History
                        </button>
                    </h2>
                    <div id="collapseMedical" class="accordion-collapse collapse" aria-labelledby="medicalHistory">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label for="last_medical_exam" class="form-label">Date of Last Medical Exam</label>
                                <input type="date" class="form-control" id="last_medical_exam" name="last_medical_exam" value="{{ form_data.last_medical_exam | default('') }}" max="{{ today }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Select date of last medical exam">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Results of Recent Blood Tests</label>
                                <div class="ms-3">
                                    <div class="mb-3">
                                        <label for="hiv_results" class="form-label">HIV (Types 1 and 2)</label>
                                        <select class="form-select" id="hiv_results" name="hiv_results" data-bs-toggle="tooltip" data-bs-placement="right" title="Select HIV test result">
                                            <option value="" {% if form_data.hiv_results == '' %}selected{% endif %}>Select</option>
                                            <option value="Negative" {% if form_data.hiv_results == 'Negative' %}selected{% endif %}>Negative</option>
                                            <option value="Positive" {% if form_data.hiv_results == 'Positive' %}selected{% endif %}>Positive</option>
                                            <option value="Pending" {% if form_data.hiv_results == 'Pending' %}selected{% endif %}>Pending</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="hbv_results" class="form-label">Hepatitis B Virus (HBV)</label>
                                        <select class="form-select" id="hbv_results" name="hbv_results" data-bs-toggle="tooltip" data-bs-placement="right" title="Select HBV test result">
                                            <option value="" {% if form_data.hbv_results == '' %}selected{% endif %}>Select</option>
                                            <option value="Negative" {% if form_data.hbv_results == 'Negative' %}selected{% endif %}>Negative</option>
                                            <option value="Positive" {% if form_data.hbv_results == 'Positive' %}selected{% endif %}>Positive</option>
                                            <option value="Pending" {% if form_data.hbv_results == 'Pending' %}selected{% endif %}>Pending</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="hcv_results" class="form-label">Hepatitis C Virus (HCV)</label>
                                        <select class="form-select" id="hcv_results" name="hcv_results" data-bs-toggle="tooltip" data-bs-placement="right" title="Select HCV test result">
                                            <option value="" {% if form_data.hcv_results == '' %}selected{% endif %}>Select</option>
                                            <option value="Negative" {% if form_data.hcv_results == 'Negative' %}selected{% endif %}>Negative</option>
                                            <option value="Positive" {% if form_data.hcv_results == 'Positive' %}selected{% endif %}>Positive</option>
                                            <option value="Pending" {% if form_data.hcv_results == 'Pending' %}selected{% endif %}>Pending</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="vdrl_results" class="form-label">Treponema pallidum (Syphilis) through VDRL</label>
                                        <select class="form-select" id="vdrl_results" name="vdrl_results" data-bs-toggle="tooltip" data-bs-placement="right" title="Select VDRL test result">
                                            <option value="" {% if form_data.vdrl_results == '' %}selected{% endif %}>Select</option>
                                            <option value="Negative" {% if form_data.vdrl_results == 'Negative' %}selected{% endif %}>Negative</option>
                                            <option value="Positive" {% if form_data.vdrl_results == 'Positive' %}selected{% endif %}>Positive</option>
                                            <option value="Pending" {% if form_data.vdrl_results == 'Pending' %}selected{% endif %}>Pending</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="antral_follicle_count" class="form-label">Antral Follicle Count</label>
                                <input type="number" class="form-control" id="antral_follicle_count" name="antral_follicle_count" value="{{ form_data.antral_follicle_count | default('') }}" min="0" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter antral follicle count">
                            </div>
                            <div class="mb-3">
                                <label for="fsh_levels" class="form-label">FSH Levels</label>
                                <input type="number" class="form-control" id="fsh_levels" name="fsh_levels" value="{{ form_data.fsh_levels | default('') }}" min="0" step="0.1" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter FSH levels in mIU/mL">
                            </div>
                            <div class="mb-3">
                                <label for="amh_levels" class="form-label">AMH Levels</label>
                                <input type="number" class="form-control" id="amh_levels" name="amh_levels" value="{{ form_data.amh_levels | default('') }}" min="0" step="0.1" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter AMH levels in ng/mL">
                            </div>
                            <div class="mb-3">
                                <label for="genetic_disorders" class="form-label">Genetic Disorders</label>
                                <textarea class="form-control" id="genetic_disorders" name="genetic_disorders" data-bs-toggle="tooltip" data-bs-placement="right" title="List any known genetic disorders">{{ form_data.genetic_disorders | default('') }}</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="family_history" class="form-label">Family Medical History</label>
                                <textarea class="form-control" id="family_history" name="family_history" data-bs-toggle="tooltip" data-bs-placement="right" title="Describe family medical history">{{ form_data.family_history | default('') }}</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="serious_illness" class="form-label">Serious Illnesses or Surgeries</label>
                                <textarea class="form-control" id="serious_illness" name="serious_illness" data-bs-toggle="tooltip" data-bs-placement="right" title="List any serious illnesses or surgeries">{{ form_data.serious_illness | default('') }}</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="current_medications" class="form-label">Current Medications</label>
                                <textarea class="form-control" id="current_medications" name="current_medications" data-bs-toggle="tooltip" data-bs-placement="right" title="List current medications">{{ form_data.current_medications | default('') }}</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="allergies" class="form-label">Allergies</label>
                                <textarea class="form-control" id="allergies" name="allergies" data-bs-toggle="tooltip" data-bs-placement="right" title="List any allergies">{{ form_data.allergies | default('') }}</textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="lifestyleHabits">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseLifestyle" aria-expanded="false" aria-controls="collapseLifestyle">
                            Lifestyle and Habits
                        </button>
                    </h2>
                    <div id="collapseLifestyle" class="accordion-collapse collapse" aria-labelledby="lifestyleHabits">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label class="form-label">Tobacco Use</label>
                                <div class="d-flex gap-3">
                                    <div class="form-check">
                                        <input type="radio" id="tobacco_use_yes" name="tobacco_use" value="Yes" {% if form_data.tobacco_use == 'Yes' %}checked{% endif %} class="form-check-input">
                                        <label for="tobacco_use_yes" class="form-check-label">Yes</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="tobacco_use_no" name="tobacco_use" value="No" {% if form_data.tobacco_use == 'No' or not form_data.tobacco_use %}checked{% endif %} class="form-check-input">
                                        <label for="tobacco_use_no" class="form-check-label">No</label>
                                    </div>
                                </div>
                                <div id="tobacco_details" class="{% if form_data.tobacco_use != 'Yes' %}d-none{% endif %} mt-2">
                                    <div class="mb-3">
                                        <label for="tobacco_frequency" class="form-label">Frequency</label>
                                        <input type="text" class="form-control" id="tobacco_frequency" name="tobacco_frequency" value="{{ form_data.tobacco_frequency | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="e.g., daily, occasionally">
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Alcohol Consumption</label>
                                <div class="d-flex gap-3">
                                    <div class="form-check">
                                        <input type="radio" id="alcohol_yes" name="alcohol" value="Yes" {% if form_data.alcohol == 'Yes' %}checked{% endif %} class="form-check-input">
                                        <label for="alcohol_yes" class="form-check-label">Yes</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="alcohol_no" name="alcohol" value="No" {% if form_data.alcohol == 'No' or not form_data.alcohol %}checked{% endif %} class="form-check-input">
                                        <label for="alcohol_no" class="form-check-label">No</label>
                                    </div>
                                </div>
                                <div id="alcohol_details" class="{% if form_data.alcohol != 'Yes' %}d-none{% endif %} mt-2">
                                    <div class="mb-3">
                                        <label for="alcohol_frequency" class="form-label">Frequency</label>
                                        <input type="text" class="form-control" id="alcohol_frequency" name="alcohol_frequency" value="{{ form_data.alcohol_frequency | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="e.g., weekly, monthly">
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Recreational Drug Use</label>
                                <div class="d-flex gap-3">
                                    <div class="form-check">
                                        <input type="radio" id="drug_use_yes" name="drug_use" value="Yes" {% if form_data.drug_use == 'Yes' %}checked{% endif %} class="form-check-input">
                                        <label for="drug_use_yes" class="form-check-label">Yes</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="drug_use_no" name="drug_use" value="No" {% if form_data.drug_use == 'No' or not form_data.drug_use %}checked{% endif %} class="form-check-input">
                                        <label for="drug_use_no" class="form-check-label">No</label>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Dietary Preferences</label>
                                <div class="d-flex flex-wrap gap-3">
                                    <div class="form-check">
                                        <input type="radio" id="diet_veg" name="diet" value="Vegetarian" {% if form_data.diet == 'Vegetarian' %}checked{% endif %} class="form-check-input">
                                        <label for="diet_veg" class="form-check-label">Vegetarian</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="diet_nonveg" name="diet" value="Non-Vegetarian" {% if form_data.diet == 'Non-Vegetarian' %}checked{% endif %} class="form-check-input">
                                        <label for="diet_nonveg" class="form-check-label">Non-Vegetarian</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="diet_vegan" name="diet" value="Vegan" {% if form_data.diet == 'Vegan' %}checked{% endif %} class="form-check-input">
                                        <label for="diet_vegan" class="form-check-label">Vegan</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="diet_other" name="diet" value="Other" {% if form_data.diet == 'Other' or not form_data.diet %}checked{% endif %} class="form-check-input">
                                        <label for="diet_other" class="form-check-label">Other</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="physicalAttributes">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapsePhysical" aria-expanded="false" aria-controls="collapsePhysical">
                            Physical Attributes
                        </button>
                    </h2>
                    <div id="collapsePhysical" class="accordion-collapse collapse" aria-labelledby="physicalAttributes">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label for="height" class="form-label">Height</label>
                                <input type="text" class="form-control" id="height" name="height" value="{{ form_data.height | default('') }}" pattern="\d+(\.\d+)? (cm|ft)" title="Height must be in format 'number cm' or 'number ft'" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="weight" class="form-label">Weight</label>
                                <input type="text" class="form-control" id="weight" name="weight" value="{{ form_data.weight | default('') }}" pattern="\d+(\.\d+)? (kg|lbs)" title="Weight must be in format 'number kg' or 'number lbs'" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="education" class="form-label">Educational Qualifications</label>
                                <input type="text" class="form-control" id="education" name="education" value="{{ form_data.education | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your educational qualifications">
                            </div>
                            <div class="mb-3">
                                <label for="mother_tongue" class="form-label">Mother Tongue</label>
                                <input type="text" class="form-control" id="mother_tongue" name="mother_tongue" value="{{ form_data.mother_tongue | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your mother tongue">
                            </div>
                            <div class="mb-3">
                                <label for="skin_colour" class="form-label">Skin Colour</label>
                                <input type="text" class="form-control" id="skin_colour" name="skin_colour" value="{{ form_data.skin_colour | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Describe your skin colour">
                            </div>
                            <div class="mb-3">
                                <label for="hair_colour" class="form-label">Hair Colour</label>
                                <input type="text" class="form-control" id="hair_colour" name="hair_colour" value="{{ form_data.hair_colour | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Describe your hair colour">
                            </div>
                            <div class="mb-3">
                                <label for="eye_colour" class="form-label">Eye Colour</label>
                                <input type="text" class="form-control" id="eye_colour" name="eye_colour" value="{{ form_data.eye_colour | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Describe your eye colour">
                            </div>
                            <div class="mb-3">
                                <label for="religion" class="form-label">Religion</label>
                                <input type="text" class="form-control" id="religion" name="religion" value="{{ form_data.religion | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your religion">
                            </div>
                            <div class="mb-3">
                                <label for="occupation" class="form-label">Occupation</label>
                                <input type="text" class="form-control" id="occupation" name="occupation" value="{{ form_data.occupation | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your occupation">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="consentDetails">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseConsent" aria-expanded="false" aria-controls="collapseConsent">
                            Consent Details
                        </button>
                    </h2>
                    <div id="collapseConsent" class="accordion-collapse collapse" aria-labelledby="consentDetails">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <div class="form-check">
                                    <input type="checkbox" id="consent_cryopreservation" name="consent_cryopreservation" {% if form_data.consent_cryopreservation == 'Yes' %}checked{% endif %} class="form-check-input">
                                    <label for="consent_cryopreservation" class="form-check-label">Consent for Cryopreservation of Oocytes</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input type="checkbox" id="consent_art_bank" name="consent_art_bank" {% if form_data.consent_art_bank == 'Yes' %}checked{% endif %} class="form-check-input">
                                    <label for="consent_art_bank" class="form-check-label">Consent for Use of Oocytes by ART Bank</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input type="checkbox" id="consent_registry" name="consent_registry" {% if form_data.consent_registry == 'Yes' %}checked{% endif %} class="form-check-input">
                                    <label for="consent_registry" class="form-check-label">Consent to Update National Registry</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="text-center mt-4">
                <button type="submit" class="btn btn-primary btn-lg">Generate Documents</button>
            </div>
        </form>
        <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="errorModalLabel">Form Errors</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Please correct the following errors:</p>
                        <ul id="errorList">
                            {% for error in errors %}
                                <li>{{ error }}</li>
                            {% endfor %}
                        </ul>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/static/oocyte_scripts.js"></script>
</body>
</html>

templates/sperm_index.html: <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sperm Donor Form</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/static/styles.css" rel="stylesheet">
</head>
<body>
    <div class="container">
        <h1 class="text-center mb-4">Sperm Donor Information Form</h1>
        <div class="progress mb-4">
            <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
        <div class="text-center mb-4">
            <a href="/" class="btn btn-secondary">Back to Home</a>
        </div>
        <form id="donorForm" action="/generate_sperm" method="POST">
            <div class="accordion" id="spermAccordion">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="personalDetails">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapsePersonal" aria-expanded="true" aria-controls="collapsePersonal">
                            Personal Details
                        </button>
                    </h2>
                    <div id="collapsePersonal" class="accordion-collapse collapse show" aria-labelledby="personalDetails">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label for="full_name" class="form-label">Full Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="full_name" name="full_name" value="{{ form_data.full_name | default('') }}" required data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your full name">
                            </div>
                            <div class="mb-3">
                                <label for="address" class="form-label">Address</label>
                                <textarea class="form-control" id="address" name="address" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your residential address">{{ form_data.address | default('') }}</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="pin_code" class="form-label">PIN Code</label>
                                <input type="text" class="form-control" id="pin_code" name="pin_code" value="{{ form_data.pin_code | default('') }}" pattern="\d{6}" title="PIN Code must be 6 digits" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="contact_number" class="form-label">Contact Number</label>
                                <input type="tel" class="form-control" id="contact_number" name="contact_number" value="{{ form_data.contact_number | default('') }}" pattern="\d{10}" title="Contact Number must be 10 digits" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="aadhaar_number" class="form-label">Aadhaar Number <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="aadhaar_number" name="aadhaar_number" value="{{ form_data.aadhaar_number | default('') }}" pattern="\d{12}" required title="Aadhaar Number must be 12 digits" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="date_of_birth" class="form-label">Date of Birth</label>
                                <input type="date" class="form-control" id="date_of_birth" name="date_of_birth" value="{{ form_data.date_of_birth | default('') }}" max="{{ today }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Select your date of birth">
                            </div>
                            <div class="mb-3">
                                <label for="email_address" class="form-label">Email Address</label>
                                <input type="email" class="form-control" id="email_address" name="email_address" value="{{ form_data.email_address | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter a valid email address">
                            </div>
                            <div class="mb-3">
                                <label for="marital_status" class="form-label">Marital Status</label>
                                <div class="d-flex flex-wrap gap-3">
                                    <div class="form-check">
                                        <input type="radio" id="marital_single" name="marital_status" value="Single" {% if form_data.marital_status == 'Single' %}checked{% endif %} class="form-check-input">
                                        <label for="marital_single" class="form-check-label">Single</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="marital_married" name="marital_status" value="Married" {% if form_data.marital_status == 'Married' %}checked{% endif %} class="form-check-input">
                                        <label for="marital_married" class="form-check-label">Married</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="marital_divorced" name="marital_status" value="Divorced" {% if form_data.marital_status == 'Divorced' %}checked{% endif %} class="form-check-input">
                                        <label for="marital_divorced" class="form-check-label">Divorced</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="marital_widowed" name="marital_status" value="Widowed" {% if form_data.marital_status == 'Widowed' or not form_data.marital_status %}checked{% endif %} class="form-check-input">
                                        <label for="marital_widowed" class="form-check-label">Widowed</label>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="num_children" class="form-label">Number of Biological Children</label>
                                <input type="number" class="form-control" id="num_children" name="num_children" value="{{ form_data.num_children | default('0') }}" min="0" max="20" title="Number of children must be between 0 and 20" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div id="children_ages" class="ms-3"></div>
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="consultationDetails">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseConsultation" aria-expanded="false" aria-controls="collapseConsultation">
                            Consultation Details
                        </button>
                    </h2>
                    <div id="collapseConsultation" class="accordion-collapse collapse" aria-labelledby="consultationDetails">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label for="donor_id" class="form-label">Donor ID</label>
                                <input type="text" class="form-control" id="donor_id" name="donor_id" value="{{ form_data.donor_id | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your donor ID if applicable">
                            </div>
                            <div class="mb-3">
                                <label for="date_of_discussion" class="form-label">Date of Discussion <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="date_of_discussion" name="date_of_discussion" value="{{ form_data.date_of_discussion | default('') }}" required max="{{ today }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Select date of discussion with doctor">
                            </div>
                            <div class="mb-3">
                                <label for="date_of_consultancy" class="form-label">Date of Consultancy <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="date_of_consultancy" name="date_of_consultancy" value="{{ form_data.date_of_consultancy | default('') }}" required max="{{ today }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Select date of consultancy">
                            </div>
                            <div class="mb-3">
                                <label for="donor_experience" class="form-label">Previous Donor Experience</label>
                                <div class="d-flex gap-3">
                                    <div class="form-check">
                                        <input type="radio" id="donor_experience_yes" name="donor_experience" value="Yes" {% if form_data.donor_experience == 'Yes' %}checked{% endif %} class="form-check-input">
                                        <label for="donor_experience_yes" class="form-check-label">Yes</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="donor_experience_no" name="donor_experience" value="No" {% if form_data.donor_experience == 'No' or not form_data.donor_experience %}checked{% endif %} class="form-check-input">
                                        <label for="donor_experience_no" class="form-check-label">No</label>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="donation_frequency" class="form-label">Frequency of Donations</label>
                                <input type="text" class="form-control" id="donation_frequency" name="donation_frequency" value="{{ form_data.donation_frequency | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="e.g., weekly, monthly">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="medicalHistory">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseMedical" aria-expanded="false" aria-controls="collapseMedical">
                            Medical History
                        </button>
                    </h2>
                    <div id="collapseMedical" class="accordion-collapse collapse" aria-labelledby="medicalHistory">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label for="last_medical_exam" class="form-label">Date of Last Medical Exam</label>
                                <input type="date" class="form-control" id="last_medical_exam" name="last_medical_exam" value="{{ form_data.last_medical_exam | default('') }}" max="{{ today }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Select date of last medical exam">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Results of Recent Blood Tests</label>
                                <div class="ms-3">
                                    <div class="mb-3">
                                        <label for="hiv_results" class="form-label">HIV (Types 1 and 2)</label>
                                        <select class="form-select" id="hiv_results" name="hiv_results" data-bs-toggle="tooltip" data-bs-placement="right" title="Select HIV test result">
                                            <option value="" {% if form_data.hiv_results == '' %}selected{% endif %}>Select</option>
                                            <option value="Negative" {% if form_data.hiv_results == 'Negative' %}selected{% endif %}>Negative</option>
                                            <option value="Positive" {% if form_data.hiv_results == 'Positive' %}selected{% endif %}>Positive</option>
                                            <option value="Pending" {% if form_data.hiv_results == 'Pending' %}selected{% endif %}>Pending</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="hbv_results" class="form-label">Hepatitis B Virus (HBV)</label>
                                        <select class="form-select" id="hbv_results" name="hbv_results" data-bs-toggle="tooltip" data-bs-placement="right" title="Select HBV test result">
                                            <option value="" {% if form_data.hbv_results == '' %}selected{% endif %}>Select</option>
                                            <option value="Negative" {% if form_data.hbv_results == 'Negative' %}selected{% endif %}>Negative</option>
                                            <option value="Positive" {% if form_data.hbv_results == 'Positive' %}selected{% endif %}>Positive</option>
                                            <option value="Pending" {% if form_data.hbv_results == 'Pending' %}selected{% endif %}>Pending</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="hcv_results" class="form-label">Hepatitis C Virus (HCV)</label>
                                        <select class="form-select" id="hcv_results" name="hcv_results" data-bs-toggle="tooltip" data-bs-placement="right" title="Select HCV test result">
                                            <option value="" {% if form_data.hcv_results == '' %}selected{% endif %}>Select</option>
                                            <option value="Negative" {% if form_data.hcv_results == 'Negative' %}selected{% endif %}>Negative</option>
                                            <option value="Positive" {% if form_data.hcv_results == 'Positive' %}selected{% endif %}>Positive</option>
                                            <option value="Pending" {% if form_data.hcv_results == 'Pending' %}selected{% endif %}>Pending</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="vdrl_results" class="form-label">Treponema pallidum (Syphilis) through VDRL</label>
                                        <select class="form-select" id="vdrl_results" name="vdrl_results" data-bs-toggle="tooltip" data-bs-placement="right" title="Select VDRL test result">
                                            <option value="" {% if form_data.vdrl_results == '' %}selected{% endif %}>Select</option>
                                            <option value="Negative" {% if form_data.vdrl_results == 'Negative' %}selected{% endif %}>Negative</option>
                                            <option value="Positive" {% if form_data.vdrl_results == 'Positive' %}selected{% endif %}>Positive</option>
                                            <option value="Pending" {% if form_data.vdrl_results == 'Pending' %}selected{% endif %}>Pending</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="genetic_disorders" class="form-label">Genetic Disorders</label>
                                <textarea class="form-control" id="genetic_disorders" name="genetic_disorders" data-bs-toggle="tooltip" data-bs-placement="right" title="List any known genetic disorders">{{ form_data.genetic_disorders | default('') }}</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="family_history" class="form-label">Family Medical History</label>
                                <textarea class="form-control" id="family_history" name="family_history" data-bs-toggle="tooltip" data-bs-placement="right" title="Describe family medical history">{{ form_data.family_history | default('') }}</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="serious_illness" class="form-label">Serious Illnesses or Surgeries</label>
                                <textarea class="form-control" id="serious_illness" name="serious_illness" data-bs-toggle="tooltip" data-bs-placement="right" title="List any serious illnesses or surgeries">{{ form_data.serious_illness | default('') }}</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="current_medications" class="form-label">Current Medications</label>
                                <textarea class="form-control" id="current_medications" name="current_medications" data-bs-toggle="tooltip" data-bs-placement="right" title="List current medications">{{ form_data.current_medications | default('') }}</textarea>
                            </div>
                            <div class="mb-3">
                                <label for="allergies" class="form-label">Allergies</label>
                                <textarea class="form-control" id="allergies" name="allergies" data-bs-toggle="tooltip" data-bs-placement="right" title="List any allergies">{{ form_data.allergies | default('') }}</textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="lifestyleHabits">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseLifestyle" aria-expanded="false" aria-controls="collapseLifestyle">
                            Lifestyle and Habits
                        </button>
                    </h2>
                    <div id="collapseLifestyle" class="accordion-collapse collapse" aria-labelledby="lifestyleHabits">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label class="form-label">Smoking Habits</label>
                                <div class="d-flex gap-3">
                                    <div class="form-check">
                                        <input type="radio" id="smoking_yes" name="smoking" value="Yes" {% if form_data.smoking == 'Yes' %}checked{% endif %} class="form-check-input">
                                        <label for="smoking_yes" class="form-check-label">Yes</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="smoking_no" name="smoking" value="No" {% if form_data.smoking == 'No' or not form_data.smoking %}checked{% endif %} class="form-check-input">
                                        <label for="smoking_no" class="form-check-label">No</label>
                                    </div>
                                </div>
                                <div id="smoking_details" class="{% if form_data.smoking != 'Yes' %}d-none{% endif %} mt-2">
                                    <div class="mb-3">
                                        <label for="smoking_frequency" class="form-label">Frequency</label>
                                        <input type="text" class="form-control" id="smoking_frequency" name="smoking_frequency" value="{{ form_data.smoking_frequency | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="e.g., daily, occasionally">
                                    </div>
                                    <div class="mb-3">
                                        <label for="cigarettes_per_day" class="form-label">Cigarettes per Day</label>
                                        <input type="number" class="form-control" id="cigarettes_per_day" name="cigarettes_per_day" value="{{ form_data.cigarettes_per_day | default('') }}" min="0" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter number of cigarettes per day">
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Alcohol Consumption</label>
                                <div class="d-flex gap-3">
                                    <div class="form-check">
                                        <input type="radio" id="alcohol_yes" name="alcohol" value="Yes" {% if form_data.alcohol == 'Yes' %}checked{% endif %} class="form-check-input">
                                        <label for="alcohol_yes" class="form-check-label">Yes</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="alcohol_no" name="alcohol" value="No" {% if form_data.alcohol == 'No' or not form_data.alcohol %}checked{% endif %} class="form-check-input">
                                        <label for="alcohol_no" class="form-check-label">No</label>
                                    </div>
                                </div>
                                <div id="alcohol_details" class="{% if form_data.alcohol != 'Yes' %}d-none{% endif %} mt-2">
                                    <div class="mb-3">
                                        <label for="alcohol_frequency" class="form-label">Frequency</label>
                                        <input type="text" class="form-control" id="alcohol_frequency" name="alcohol_frequency" value="{{ form_data.alcohol_frequency | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="e.g., weekly, monthly">
                                    </div>
                                    <div class="mb-3">
                                        <label for="alcohol_amount" class="form-label">Average Amount</label>
                                        <input type="text" class="form-control" id="alcohol_amount" name="alcohol_amount" value="{{ form_data.alcohol_amount | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="e.g., number of drinks per occasion">
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Recreational Drug Use</label>
                                <div class="d-flex gap-3">
                                    <div class="form-check">
                                        <input type="radio" id="drug_use_yes" name="drug_use" value="Yes" {% if form_data.drug_use == 'Yes' %}checked{% endif %} class="form-check-input">
                                        <label for="drug_use_yes" class="form-check-label">Yes</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="drug_use_no" name="drug_use" value="No" {% if form_data.drug_use == 'No' or not form_data.drug_use %}checked{% endif %} class="form-check-input">
                                        <label for="drug_use_no" class="form-check-label">No</label>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Dietary Preferences</label>
                                <div class="d-flex flex-wrap gap-3">
                                    <div class="form-check">
                                        <input type="radio" id="diet_veg" name="diet" value="Vegetarian" {% if form_data.diet == 'Vegetarian' %}checked{% endif %} class="form-check-input">
                                        <label for="diet_veg" class="form-check-label">Vegetarian</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="diet_nonveg" name="diet" value="Non-Vegetarian" {% if form_data.diet == 'Non-Vegetarian' %}checked{% endif %} class="form-check-input">
                                        <label for="diet_nonveg" class="form-check-label">Non-Vegetarian</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="diet_vegan" name="diet" value="Vegan" {% if form_data.diet == 'Vegan' %}checked{% endif %} class="form-check-input">
                                        <label for="diet_vegan" class="form-check-label">Vegan</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="radio" id="diet_other" name="diet" value="Other" {% if form_data.diet == 'Other' or not form_data.diet %}checked{% endif %} class="form-check-input">
                                        <label for="diet_other" class="form-check-label">Other</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="physicalAttributes">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapsePhysical" aria-expanded="false" aria-controls="collapsePhysical">
                            Physical Attributes
                        </button>
                    </h2>
                    <div id="collapsePhysical" class="accordion-collapse collapse" aria-labelledby="physicalAttributes">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label for="height" class="form-label">Height</label>
                                <input type="text" class="form-control" id="height" name="height" value="{{ form_data.height | default('') }}" pattern="\d+(\.\d+)? (cm|ft)" title="Height must be in format 'number cm' or 'number ft'" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="weight" class="form-label">Weight</label>
                                <input type="text" class="form-control" id="weight" name="weight" value="{{ form_data.weight | default('') }}" pattern="\d+(\.\d+)? (kg|lbs)" title="Weight must be in format 'number kg' or 'number lbs'" data-bs-toggle="tooltip" data-bs-placement="right">
                            </div>
                            <div class="mb-3">
                                <label for="education" class="form-label">Educational Qualifications</label>
                                <input type="text" class="form-control" id="education" name="education" value="{{ form_data.education | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your educational qualifications">
                            </div>
                            <div class="mb-3">
                                <label for="mother_tongue" class="form-label">Mother Tongue</label>
                                <input type="text" class="form-control" id="mother_tongue" name="mother_tongue" value="{{ form_data.mother_tongue | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your mother tongue">
                            </div>
                            <div class="mb-3">
                                <label for="skin_colour" class="form-label">Skin Colour</label>
                                <input type="text" class="form-control" id="skin_colour" name="skin_colour" value="{{ form_data.skin_colour | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Describe your skin colour">
                            </div>
                            <div class="mb-3">
                                <label for="hair_colour" class="form-label">Hair Colour</label>
                                <input type="text" class="form-control" id="hair_colour" name="hair_colour" value="{{ form_data.hair_colour | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Describe your hair colour">
                            </div>
                            <div class="mb-3">
                                <label for="eye_colour" class="form-label">Eye Colour</label>
                                <input type="text" class="form-control" id="eye_colour" name="eye_colour" value="{{ form_data.eye_colour | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Describe your eye colour">
                            </div>
                            <div class="mb-3">
                                <label for="religion" class="form-label">Religion</label>
                                <input type="text" class="form-control" id="religion" name="religion" value="{{ form_data.religion | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your religion">
                            </div>
                            <div class="mb-3">
                                <label for="occupation" class="form-label">Occupation</label>
                                <input type="text" class="form-control" id="occupation" name="occupation" value="{{ form_data.occupation | default('') }}" data-bs-toggle="tooltip" data-bs-placement="right" title="Enter your occupation">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="consentDetails">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseConsent" aria-expanded="false" aria-controls="collapseConsent">
                            Consent Details
                        </button>
                    </h2>
                    <div id="collapseConsent" class="accordion-collapse collapse" aria-labelledby="consentDetails">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <div class="form-check">
                                    <input type="checkbox" id="consent_cryopreservation" name="consent_cryopreservation" {% if form_data.consent_cryopreservation == 'Yes' %}checked{% endif %} class="form-check-input">
                                    <label for="consent_cryopreservation" class="form-check-label">Consent for Cryopreservation of Sperm</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input type="checkbox" id="consent_art_bank" name="consent_art_bank" {% if form_data.consent_art_bank == 'Yes' %}checked{% endif %} class="form-check-input">
                                    <label for="consent_art_bank" class="form-check-label">Consent for Use of Sperm by ART Bank</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input type="checkbox" id="consent_registry" name="consent_registry" {% if form_data.consent_registry == 'Yes' %}checked{% endif %} class="form-check-input">
                                    <label for="consent_registry" class="form-check-label">Consent to Update National Registry</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="text-center mt-4">
                <button type="submit" class="btn btn-primary btn-lg">Generate Documents</button>
            </div>
        </form>
        <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="errorModalLabel">Form Errors</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Please correct the following errors:</p>
                        <ul id="errorList">
                            {% for error in errors %}
                                <li>{{ error }}</li>
                            {% endfor %}
                        </ul>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/static/sperm_scripts.js"></script>
</body>
</html> 

templates/success.html : <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Documents Generated</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/static/styles.css">
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center mb-4">Documents Generated Successfully</h1>
        <div class="alert alert-success" role="alert">
            Your {{ donor_type }} donor documents have been generated successfully.
            <a href="/download/{{ zip_filename }}" class="alert-link">Click here to download the ZIP file</a>.
        </div>
        <a href="/" class="btn btn-primary">Back to Home</a>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

templates_docs : files

create_template.py : from docx import Document
from docx.shared import Pt, Inches
from docx.enum.text import WD_ALIGN_PARAGRAPH
from docx.oxml.ns import qn
import os

def create_form_15_template():
    doc = Document()
    heading = doc.add_heading('FORM 15', level=1)
    heading.alignment = WD_ALIGN_PARAGRAPH.CENTER
    heading.runs[0].bold = True
    doc.add_paragraph('[Refer Rule 13 (2) (ii)]', style='Normal').alignment = WD_ALIGN_PARAGRAPH.CENTER
    doc.add_heading('Consent Form for the Donor of Sperm', level=2).alignment = WD_ALIGN_PARAGRAPH.CENTER

    p = doc.add_paragraph()
    p.add_run('I, ').bold = True
    p.add_run('{full_name}, residing at {address}, PIN Code: {pin_code}, Mobile: {contact_number}, Aadhaar Number {aadhaar_number}, willingly consent to donate my sperm to couple/individual who are unable to have a child by other means. At this stage and to the best of my knowledge I am free of any infectious diseases or genetic disorders.')
    doc.add_paragraph('I have had a full discussion with ').add_run('Dr. Ravikumar N.R').bold = True
    p = doc.add_paragraph()
    p.add_run(' on {date_of_discussion}, address Subash Nagara, B.H Road, Nelamangala Town, Bengaluru District, Karnataka-562123')
    p = doc.add_paragraph('I have been counselled by ')
    p.add_run('Ranjana Basavaraj Byadagi').bold = True
    p.add_run(', address Avaraguppa, Avaraguppa Post, Siddapura, Uttara Kannada-581355 on {date_of_consultancy}.')
    doc.add_paragraph('(I understand that there will be no direct or indirect contact between the recipient, and me, and my personal identity will not be disclosed to the recipient or to the child born through the use of my gamete: If applicable)')
    doc.add_paragraph('I understand that I shall have no rights whatsoever on the resulting offspring and vice versa.')
    doc.add_paragraph('_________________\nSignature of Donor', style='Normal').alignment = WD_ALIGN_PARAGRAPH.LEFT
    doc.add_heading('ENDORSEMENT BY THE ART BANK', level=2)
    doc.add_paragraph('I/we have personally explained to {full_name}, the details and implications of his signing this consent/approval form, and made sure to the extent humanly possible that he understands these details and implications.')
    doc.add_paragraph('_______________________________\nName and signature of the Doctor', style='Normal')
    doc.add_paragraph('___________________________________________________________\nName, address and signature of the Witness from the ART bank', style='Normal')
    doc.add_paragraph('Name and address of the ART bank\nCryoconserve Private Limited,\n3rd Floor, 59/1, Dr Rajkumar Road, 2nd Block,\nRajajinagar, Bengaluru, Karnataka 560010', style='Normal')
    doc.add_paragraph('Dated: {date}', style='Normal')
    doc.save('templates_docx/form_15.docx')

def create_medical_history_template():
    doc = Document()
    heading = doc.add_heading('MEDICAL HISTORY AND SCREENING REPORT FOR SEMEN DONOR', level=1)
    heading.alignment = WD_ALIGN_PARAGRAPH.CENTER
    heading.runs[0].bold = True
    doc.add_paragraph()
    p = doc.add_paragraph()
    p.add_run('ART Bank Name: ').bold = True
    p.add_run('Cryoconserve')
    p = doc.add_paragraph()
    p.add_run('Donor ID: ').bold = True
    p.add_run('{donor_id}')
    p = doc.add_paragraph()
    p.add_run('Date: ').bold = True
    p.add_run('{date}')

    doc.add_heading('Section A: Donor Identification and Registration', level=2).bold = True
    doc.add_paragraph('1. Full Name: {full_name}')
    doc.add_paragraph('2. Date of Birth: {date_of_birth} (As per Aadhaar, Enclosed)')
    doc.add_paragraph('3. Contact Information:')
    p = doc.add_paragraph()
    p.add_run('   · Address: ').bold = True
    p.add_run('{address} (As per Aadhaar, Enclosed)')
    p = doc.add_paragraph()
    p.add_run('   · Phone Number: ').bold = True
    p.add_run('{contact_number}')
    p = doc.add_paragraph()
    p.add_run('   · Email: ').bold = True
    p.add_run('{email_address}')
    p = doc.add_paragraph()
    p.add_run('   · Aadhaar Number: ').bold = True
    p.add_run('{aadhaar_number}')

    doc.add_heading('Section B: Medical and Genetic Screening', level=2).bold = True
    doc.add_paragraph('1. Date of last comprehensive medical examination: {last_medical_exam}')
    doc.add_paragraph('2. Results of recent blood tests:')
    doc.add_paragraph('   · Human immunodeficiency virus (HIV), types 1 and 2: {hiv_results}')
    doc.add_paragraph('   · Hepatitis B virus (HBV): {hbv_results}')
    doc.add_paragraph('   · Hepatitis C virus (HCV): {hcv_results}')
    doc.add_paragraph('   · Treponema pallidum (syphilis) through VDRL: {vdrl_results}')
    doc.add_paragraph('3. Detailed family medical history, including any genetic conditions:\n{family_history}')
    doc.add_paragraph('4. Record of any serious illnesses or surgeries:\n{serious_illness}')
    doc.add_paragraph('5. Current medications and known allergies:\n{current_medications}, {allergies}')

    doc.add_heading('Section C: Consent for Cryopreservation and Use', level=2).bold = True
    doc.add_paragraph('1. Consent for cryopreservation of sperm: {consent_cryopreservation}')
    doc.add_paragraph('2. Consent for the use of sperm by ART Bank: {consent_art_bank}')

    doc.add_heading('Section D: National Registry Update Consent', level=2).bold = True
    doc.add_paragraph('1. Consent to update donor information in the National Registry: {consent_registry}')
    doc.add_paragraph('Declaration and Consent')
    p = doc.add_paragraph()
    p.add_run('I hereby declare that the information provided above is true and complete to the best of my knowledge and I consent to the screening, collection, registration, and cryopreservation of my sperm as per the ART Regulation Act, 2021. I also consent to the maintenance of my records and the regular update of the National Registry as required by the Act. Furthermore, I declare I have never donated my semen to any ART clinic or bank, nor through any other means, and I will not donate my semen in the future.')
    doc.add_paragraph('Signature: _______________________________ Date: {date}')
    doc.save('templates_docx/medical_history.docx')

def create_donor_info_template():
    doc = Document()
    heading = doc.add_heading('SPERM/SEMEN DONOR INFORMATION FORM', level=1)
    heading.alignment = WD_ALIGN_PARAGRAPH.CENTER
    heading.runs[0].bold = True
    doc.add_paragraph()

    doc.add_heading('Personal Details:', level=2).bold = True
    doc.add_paragraph('1. Full Name: {full_name}')
    doc.add_paragraph('2. Date of Birth: {date_of_birth} (As per Aadhaar, Attached)')
    doc.add_paragraph('3. Contact Number: {contact_number}')
    doc.add_paragraph('4. Email Address: {email_address}')
    doc.add_paragraph('5. Aadhaar Number: {aadhaar_number}')

    doc.add_heading('Health and Medical History:', level=2).bold = True
    doc.add_paragraph('1. Any Known Genetic Disorders or Medical Conditions: {genetic_disorders}')
    doc.add_paragraph('2. Family History of Genetic Conditions: {family_history}')
    doc.add_paragraph('3. Current Medications: {current_medications}')
    doc.add_paragraph('4. Allergies: {allergies}')

    doc.add_heading('Lifestyle and Habits:', level=2).bold = True
    p = doc.add_paragraph('1. Smoking Habits: ')
    p.add_run('(Circle one) {smoking}')
    doc.add_paragraph('   If yes, Frequency: {smoking_frequency} (e.g., daily, occasionally)')
    doc.add_paragraph('   If yes, Number of Cigarettes per Day: {cigarettes_per_day}')
    p = doc.add_paragraph('2. Alcohol Consumption: ')
    p.add_run('(Circle one) {alcohol}')
    doc.add_paragraph('   If yes, Frequency: {alcohol_frequency} (e.g., weekly, monthly)')
    doc.add_paragraph('   If yes, Average Amount Consumed: {alcohol_amount} (e.g., number of drinks per occasion)')
    p = doc.add_paragraph('3. Recreational Drug Use: ')
    p.add_run('(Circle one) {drug_use}')
    p = doc.add_paragraph('4. Dietary Preferences: ')
    p.add_run('(Circle one) {diet}')

    doc.add_heading('Reproductive History:', level=2).bold = True
    p = doc.add_paragraph('1. Marital Status: ')
    p.add_run('(Circle one) {marital_status}')
    doc.add_paragraph('2. Number of Biological Children (if any): {num_children}')
    doc.add_paragraph('{children_ages}')  # Placeholder for dynamic children ages
    p = doc.add_paragraph('3. Previous Donor Experience (if applicable): ')
    p.add_run('(Circle one) {donor_experience}')
    doc.add_paragraph('4. Frequency of Donations (if known): {donation_frequency}')

    doc.add_heading('Physical Attributes:', level=2).bold = True
    doc.add_paragraph('1. Height: {height} (in centimetres or feet/inches)')
    doc.add_paragraph('2. Weight: {weight} (in kilograms or pounds)')
    doc.add_paragraph('3. Educational Qualifications: {education}')
    doc.add_paragraph('4. Mother Tongue: {mother_tongue}')
    doc.add_paragraph('5. Skin Colour: {skin_colour}')
    doc.add_paragraph('6. Hair Colour: {hair_colour}')
    doc.add_paragraph('7. Eye Colour: {eye_colour}')
    doc.add_paragraph('8. Religion: {religion}')
    doc.add_paragraph('9. Occupation: {occupation}')

    doc.add_heading('Consent and Legal Acknowledgment:', level=2).bold = True
    doc.add_paragraph('1. I understand that my genetic material will be used for assisted reproductive purposes.')
    doc.add_paragraph('2. I consent to the storage and use of my sperm/semen for fertility treatments.')
    doc.add_paragraph('3. I acknowledge that I am voluntarily providing this information, this shall be used for the legal purpose.')
    doc.add_paragraph('4. Furthermore, I declare I have never donated my semen to any ART clinic or bank, nor through any other means, and I will not donate my semen in the future.')
    doc.add_paragraph('Signature: ___________________________ Date: {date}')
    doc.save('templates_docx/donor_info.docx')

def create_form_13_template():
    doc = Document()
    heading = doc.add_heading('FORM 13', level=1)
    heading.alignment = WD_ALIGN_PARAGRAPH.CENTER
    heading.runs[0].bold = True
    doc.add_paragraph('[Refer Rule 13 (f) (viii)]', style='Normal').alignment = WD_ALIGN_PARAGRAPH.CENTER
    doc.add_heading('Consent Form for the Donor of Oocytes', level=2).alignment = WD_ALIGN_PARAGRAPH.CENTER

    p = doc.add_paragraph()
    p.add_run('I, ').bold = True
    p.add_run('{full_name}, residing at {address}, District: {district}, State: {state}, PIN Code: {pin_code}, Mobile: {contact_number}, Aadhaar Number {aadhaar_number}, willingly consent to donate my oocyte to couples who are unable to have a child by other means. At this stage and to the best of my knowledge I am free of any infectious diseases or genetic disorders.')
    doc.add_paragraph('I have had a full discussion with ').add_run('{doctor_name}').bold = True
    p = doc.add_paragraph()
    p.add_run(' on {date_of_discussion}, at {ivf_name}, {ivf_address}.')
    doc.add_paragraph('(I understand that there will be no direct or indirect contact between me and the recipient, and my personal identity will not be disclosed to the recipient or to the child born through the use of my gamete: If applicable)')
    doc.add_paragraph('I understand that I shall have no rights whatsoever on the resulting offspring and vice versa.')
    doc.add_paragraph('I understand that the method of treatment may include:')
    doc.add_paragraph('   1. Stimulating my ovaries for multifollicular development.')
    doc.add_paragraph('   2. The recovery of one or more of my eggs under ultrasound-guidance or by laparoscopy under sedation or general anesthesia.')
    doc.add_paragraph('   3. The fertilization of my oocytes with recipient’s husband’s or donor sperm and transferring the resulting embryo into the recipient.')
    doc.add_paragraph('I understand and accept that the drugs that are used to stimulate the ovaries to raise oocytes have temporary side-effects like nausea, headaches, and abdominal bloating. Only in a small proportion of cases, a condition called ovarian hyperstimulation occurs where there is an exaggerated ovarian response. Such cases can be identified in time but only to a limited extent. Further, at times the ovarian response is poor or absent in spite of using a high dose of drugs. Under these circumstances, the treatment cycle will be cancelled.')
    p = doc.add_paragraph()
    p.add_run('Name, address and signature of woman\n').bold = True
    p.add_run('{full_name}\nAddress: {address}, District: {district}, State: {state}, PIN Code: {pin_code}')
    doc.add_heading('Endorsement by the ART Clinic', level=2).bold = True
    doc.add_paragraph('We have personally explained to {full_name}, the details and implications of her signing this consent/approval form, and made sure to the extent humanly possible that she understands these details and implications.')
    doc.add_paragraph('Name, address and signature of the Witness from the clinic\nMrs. Ruby Stella\nIVF Access, Coimbatore, at 609, 2nd Floor, Avinashi Road, above Pazhamudir Plus, Peelamedu, Coimbatore, Tamil Nadu 641004')
    doc.add_paragraph('Name and signature of the Doctor\n{doctor_name}')
    doc.add_paragraph('Name and address of the ART clinic\n{ivf_name}, {ivf_address}')
    doc.add_paragraph('Name and address of the ART bank that recruited and screened the donor\nCryoconserve, 3rd Floor, 59/1, 2nd Block, Rajajinagar, Bengaluru-560010')
    doc.add_paragraph('Dated: {date}')
    doc.save('templates_docx/form_13.docx')

def create_oocyte_medical_history_template():
    doc = Document()
    heading = doc.add_heading('MEDICAL HISTORY AND SCREENING REPORT FOR OOCYTE DONOR', level=1)
    heading.alignment = WD_ALIGN_PARAGRAPH.CENTER
    heading.runs[0].bold = True
    doc.add_paragraph()
    p = doc.add_paragraph()
    p.add_run('ART Bank Name: ').bold = True
    p.add_run('Cryoconserve')
    p = doc.add_paragraph()
    p.add_run('Donor ID: ').bold = True
    p.add_run('{donor_id}')
    p = doc.add_paragraph()
    p.add_run('Date: ').bold = True
    p.add_run('{date}')

    doc.add_heading('Section A: Donor Identification and Registration', level=2).bold = True
    doc.add_paragraph('1. Full Name: {full_name}')
    doc.add_paragraph('2. Date of Birth: {date_of_birth} (As per Aadhaar, Enclosed)')
    doc.add_paragraph('3. Marital Status: {marital_status}')
    doc.add_paragraph('4. Contact Information:')
    p = doc.add_paragraph()
    p.add_run('   · Address: ').bold = True
    p.add_run('{address}, District: {district}, State: {state}, PIN Code: {pin_code}')
    p = doc.add_paragraph()
    p.add_run('   · Phone Number: ').bold = True
    p.add_run('{contact_number}')
    p = doc.add_paragraph()
    p.add_run('   · Email: ').bold = True
    p.add_run('{email_address}')
    p = doc.add_paragraph()
    p.add_run('   · Aadhaar Number: ').bold = True
    p.add_run('{aadhaar_number}')

    doc.add_heading('Section B: Medical and Genetic Screening', level=2).bold = True
    doc.add_paragraph('1. Date of last comprehensive medical examination: {last_medical_exam}')
    doc.add_paragraph('2. Results of recent blood tests:')
    doc.add_paragraph('   · Human immunodeficiency virus (HIV), types 1 and 2: {hiv_results}')
    doc.add_paragraph('   · Hepatitis B virus (HBV): {hbv_results}')
    doc.add_paragraph('   · Hepatitis C virus (HCV): {hcv_results}')
    doc.add_paragraph('   · Treponema pallidum (syphilis) through VDRL: {vdrl_results}')
    doc.add_paragraph('3. Detailed family medical history, including any genetic conditions:\n{family_history}')
    doc.add_paragraph('4. Record of any serious illnesses or surgeries:\n{serious_illness}')
    doc.add_paragraph('5. Current medications and known allergies:\n{current_medications}, {allergies}')

    doc.add_heading('Section C: Ovarian Reserve Assessment', level=2).bold = True
    doc.add_paragraph('1. Antral follicle count (AFC): {antral_follicle_count}')
    doc.add_paragraph('2. Follicle-stimulating hormone (FSH) levels: {fsh_levels}')
    doc.add_paragraph('3. Anti-Müllerian hormone (AMH) levels: {amh_levels}')

    doc.add_heading('Section D: Lifestyle and Health Assessment', level=2).bold = True
    doc.add_paragraph('1. Tobacco Use: {tobacco_use}')
    doc.add_paragraph('   If yes, Frequency: {tobacco_frequency}')
    doc.add_paragraph('2. Alcohol Consumption: {alcohol}')
    doc.add_paragraph('   If yes, Frequency: {alcohol_frequency}')
    doc.add_paragraph('3. Recreational Drug Use: {drug_use}')
    doc.add_paragraph('4. Exercise Routine: {exercise_routine}')

    doc.add_heading('Section E: National Registry Update Consent', level=2).bold = True
    doc.add_paragraph('1. Consent to update donor information in the National Registry: {consent_registry}')
    doc.add_paragraph('Declaration and Consent')
    p = doc.add_paragraph()
    p.add_run('I hereby declare that the information provided above is true and complete to the best of my knowledge. I consent to the screening, collection, registration, and cryopreservation of my oocytes as per the ART Regulation Act, 2021. I also consent to the maintenance of my records and the regular update of the National Registry as required by the Act.')
    doc.add_paragraph('Signature: _______________________________ Date: {date}')
    doc.save('templates_docx/oocyte_medical_history.docx')

def create_oocyte_donor_affidavit_template():
    doc = Document()
    heading = doc.add_heading('OOCYTE DONOR AFFIDAVIT / DECLARATION', level=1)
    heading.alignment = WD_ALIGN_PARAGRAPH.CENTER
    heading.runs[0].bold = True
    doc.add_paragraph()
    p = doc.add_paragraph()
    p.add_run('I, ').bold = True
    p.add_run('{full_name}, aged {age} Years (DOB {date_of_birth}), residing at {address}, District: {district}, State: {state}, PIN Code: {pin_code}, Mobile: {contact_number}, Aadhaar Number: {aadhaar_number}, do hereby state on solemn affirmation as under:')
    doc.add_paragraph('At this stage, I have {num_children} Child(ren) more than 2-year-old. I have presented supportive documents of my children. I also state that I will not donate my oocyte to any other couple. I also declare that I have not undergone any oocyte donation before.')
    doc.add_paragraph('I have been counselled by ').add_run('{doctor_name}').bold = True
    p = doc.add_paragraph()
    p.add_run(' at {ivf_name}, {ivf_address}. I have been explained about the process of oocyte retrieval procedure.')
    doc.add_paragraph('I, willingly without any financial interest consent to donate my oocyte to couple/individual who are unable to have a child by other means, and we are not taking any kind of donation/amount for this.')
    doc.add_paragraph('I, declare that above given information is true to my knowledge and all the responsibility of any legal liabilities will be upon me.')
    doc.add_paragraph('Place: {place}')
    doc.add_paragraph('Date: {date}')
    doc.add_paragraph('Signature of Donor')
    doc.save('templates_docx/oocyte_donor_affidavit.docx')

def create_commissioning_couple_affidavit_template():
    doc = Document()
    heading = doc.add_heading('COMMISSIONING COUPLE\'S AFFIDAVIT', level=1)
    heading.alignment = WD_ALIGN_PARAGRAPH.CENTER
    heading.runs[0].bold = True
    doc.add_paragraph()
    p = doc.add_paragraph()
    p.add_run('We, ').bold = True
    p.add_run('{female_name}, W/o {male_name}, aged about {female_age} Years (DOB {female_dob}), Aadhaar Number {female_aadhaar}, Occupation {female_occupation}, and {male_name}, aged about {male_age} Years (DOB {male_dob}), both residing at {address}, District: {district}, State: {state}, PIN Code: {pin_code}, do hereby solemnly affirm and depose as under:')
    doc.add_paragraph('1. We state that, we are unable to conceive a child and have decided to opt for infertility treatment and thereby approached {ivf_name}, {ivf_address} (hereinafter referred to as "ART Clinic"). However, we agreed to avail the ART treatment using the Oocytes from the Oocyte Donor, we the intending couple shall obtain an insurance coverage in favor of Oocyte Donor and give a guarantee by signing an affidavit as prescribed under the Assisted Reproductive Technology (Regulation) Act 2021 and Assisted Reproductive Technology (Regulation) Rules 2022.')
    doc.add_paragraph('2. That, in view of the above-mentioned ART Act and Rules, we hereby sign this Affidavit in compliance with Rule 12 (ii) of the Assisted Reproductive Technology (Regulation) Rules 2022 (in short "ART Rules").')
    doc.add_paragraph('3. Further, we hereby undertake to bear the full medical expenditures for the Oocyte Donor during the treatment and provide guarantee of compensation for specified loss, damage, complication or death of oocyte donor during the process of oocyte retrieval as prescribed under Section 22(1)(b) and Section 22(4)(ii) of Assisted Reproductive Technology (Regulation) Act, 2021 and 12(ii) of the Assisted Reproductive Technology Act (Regulation) 2021.')
    doc.add_paragraph('4. We abide to take a general health insurance coverage and a life insurance coverage in favor of oocyte donor for the period of Twelve (12) Months from the Insurance Company (recognized by Insurance Regulatory Development Authority established under the provisions of the Insurance Regulatory Development Authority Act 1999) for an amount which is sufficient enough to cover all expenses for all complications arising due to oocyte retrieval as per 22(1)(b) of the Assisted Reproductive Technology (Regulation) Act 2021, and 12(i) of Assisted Reproductive Technology (Regulation) Rules, 2022.')
    doc.add_paragraph('5. We also state that this Affidavit is signed by both of us with free consent and without any undue influence and coercion.')
    doc.add_paragraph('6. That the contents stated in para 1 to para 5 of this Affidavit are true and correct to the best of our knowledge and also, we indemnify and keep the ART Bank and the ART Clinic Indemnified, if any statement or fact stated by us is incorrect or false.')
    doc.add_paragraph('DEPONENT')
    doc.add_heading('VERIFICATION', level=2).bold = True
    doc.add_paragraph('Verified at {place} on {date} that the contents of the affidavit in Para-1 to 6 are true and correct to the best of my knowledge and nothing has been concealed therefrom.')
    doc.add_paragraph('Place: {place}')
    doc.add_paragraph('Date: {date}')
    doc.add_paragraph('DEPONENT')
    doc.save('templates_docx/commissioning_couple_affidavit.docx')

def create_all_templates():
    if not os.path.exists('templates_docx'):
        os.makedirs('templates_docx')
    create_form_15_template()
    create_medical_history_template()
    create_donor_info_template()
    create_form_13_template()
    create_oocyte_medical_history_template()
    create_oocyte_donor_affidavit_template()
    create_commissioning_couple_affidavit_template()

if __name__ == '__main__':
    create_all_templates()

vercel.json : {
    "version": 2,
    "builds": [
        {
            "src": "api/app.py",
            "use": "@vercel/python"
        }
    ],
    "routes": [
        {
            "src": "/(.*)",
            "dest": "api/app.py"
        }
    ]
}